# -*- python -*-
# ex: set syntax=python:

from buildbot.process.factory import BuildFactory
from buildbot.changes.pb import PBChangeSource
from buildbot.changes.svnpoller import SVNPoller
from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.schedulers import timed
from buildbot.changes.filter import ChangeFilter
from buildbot.config import BuilderConfig

from buildbot import locks
from buildbot.steps import source,shell
from buildbot.process import factory

c = BuildmasterConfig = {}

################################# BUILDSLAVES #################################


from buildbot.buildslave import BuildSlave
c['slaves'] = [	BuildSlave("DVDFab9_dev", "123456"),
                BuildSlave("DVDFab9_mini", "123456"),
                BuildSlave("DVDFab9_mobile2_unittest", "123456"),
		BuildSlave("DVDFab", "DVDFab_pwd"),					
		BuildSlave("DVDFab_Mac_107", "123456"),
		BuildSlave("DVDFab9_ts_win", "123456"),
		BuildSlave("DVDFab9_Win_168", "123456"),
		BuildSlave("Backup_DVDFab9_Win", "123456"),
		BuildSlave("Backup_DVDFab9_Mac", "123456"),
		BuildSlave("DVDFab9_Official_Win", "123456"),
		BuildSlave("DVDFab9_Official_Mac", "123456"),
		BuildSlave("Package_DVDFab8", "123456"),
		BuildSlave("Package_DVDFab9_Retail", "123456"),
		BuildSlave("copy_DVDFab9_Official_Folder", "123456"),
		BuildSlave("Package_DVDFab9_Addon", "123456"),
		BuildSlave("Official_Fab_Daily_Build", "123456"),
		BuildSlave("Mac_Official_Fab_Daily_Build", "123456"),
	        BuildSlave("All_Beta_Package", "123456"),
                BuildSlave("All_Official_Package", "123456"),
	        BuildSlave("Package_DVDFab9_Beta", "123456"),
                BuildSlave("Package_DVDFab9_Official", "123456"),
	        BuildSlave("Package_BluFab9_Beta", "123456"),
                BuildSlave("Package_BluFab9_Official", "123456"),
		BuildSlave("Package_TDMore", "123456"),
		BuildSlave("Dev_TDMore", "123456"),
		BuildSlave("Package_SafeDVDCopy", "123456"),
	        BuildSlave("Package_Mac_DVDFab9_Beta", "123456"),
                BuildSlave("Package_Mac_DVDFab9_Official", "123456"),
		BuildSlave("Beta_Fab_No_Compile", "123456"),
		BuildSlave("Mac_Beta_Fab_No_Compile", "123456"),
		BuildSlave("Package_Mac_SafeDVDCopy", "123456"),
		BuildSlave("Package_Mac_SafeDVDCopy_Backup", "123456"),
		BuildSlave("Package_SafeDVDCopy_Backup", "123456"),
		BuildSlave("DVDFab9_Basement_Merge", "123456"),
		BuildSlave("Package_VidOnme", "123456"),
		BuildSlave("Package_Mac_VidOnme", "123456"),
		BuildSlave("Mac_SafeDVDCopy_Backup", "123456"),
		BuildSlave("SafeDVDCopy_Backup", "123456"),
		BuildSlave("TDMore_Build", "123456"),
		BuildSlave("VidOn_Video_Toolkit_Build", "123456"),
		BuildSlave("Mac_VidOn_Video_Toolkit_Build", "123456"),
		BuildSlave("Restore_TDMore", "123456"),
		BuildSlave("Restore_VidOn_Video_Toolkit", "123456"),
		BuildSlave("Restore_Mac_VidOn_Video_Toolkit", "123456"),
		BuildSlave("TDMore_Backup", "123456"),
		BuildSlave("VidOn_Video_Toolkit_Backup", "123456"),
		BuildSlave("Mac_VidOn_Video_Toolkit_Backup", "123456"),
		BuildSlave("Backup_DVDFab_stable_trunk", "123456"),
		BuildSlave("SafeDVDCopy_Build", "123456"),
		BuildSlave("Mac_SafeDVDCopy_Build", "123456"),
		BuildSlave("Restore_SafeDVDCopy", "123456"),
		BuildSlave("Restore_Mac_SafeDVDCopy", "123456"),
		BuildSlave("TDMore_Build_30", "123456"),
		BuildSlave("VidOn_Video_Toolkit_Build_30", "123456"),
		BuildSlave("SafeDVDCopy_Build_30", "123456"),
		BuildSlave("Sign_VideoDownloader_Browser", "123456"),
		BuildSlave("DVDFab_Retail_Japan", "123456"),
		BuildSlave("Mac_DVDFab_Retail_Japan", "123456")]
				
				

c['slavePortnum'] = 9989

################################# CHANGESOURCES #################################
p1 = PBChangeSource()

svnurl_dvdfabbuild = "https://thinkcentre:8443/svn/build/trunk/DVDFab_9_mobile2"

#turn trunk/subdir/file.c into (None, "subdir/file.c")
#and branches/1.5.x/subdir/file.c into ("branches/1.5.x", "subdir/file.c")
def dvdfab_split_file(path):
	pieces = path.split('/')
	if pieces[0] == "auto_package":
		return ("auto_package", "/".join(pieces[1:]))		
	else:
		return None 

cs_svnpoller = SVNPoller(	project = "DVDFab_dev", 
							svnurl = svnurl_dvdfabbuild,
							pollinterval = 120,
							split_file = dvdfab_split_file,
							svnbin = "/usr/bin/svn")

c['change_source'] = [p1, cs_svnpoller]

################################# SCHEDULERS #################################

def dev_branch_fn(branch):
	branch_list = [	"auto_package"]
	
	if branch in branch_list:
		return branch


import os
#change include [who, files, comments, project, repository, revision, branches, links, build properties]


def isImportantDailyBuildWin(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("start_win_daily_build.txt"):
			is_important = True
			break

	return is_important

def isImportantDailyBuildMac(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("start_mac_daily_build.txt"):
			is_important = True
			break

	return is_important


def isImportantBeta(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("Beta.txt"):
			is_important = True
			break

	return is_important
	
def isImportantOfficial(change):
	is_important = False
	for each_file in  change.files:
		if each_file.startswith("Official.txt"):
			is_important = True
			break

	return is_important
	
def isImportantRestoreWin(change):
	is_important = False
	for each_file in  change.files:
		if each_file.startswith("Backup_Win.txt"):
			is_important = True
			break

	return is_important

def isImportantRestoreMac(change):
	is_important = False
	for each_file in  change.files:
		if each_file.startswith("Backup_Mac.txt"):
			is_important = True
			break

	return is_important

def isImportantDVDFabBeta(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("DVDFab_Beta.txt"):
			is_important = True
			break

	return is_important

def isImportantDVDFabOfficial(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("DVDFab_Official.txt"):
			is_important = True
			break

	return is_important


def isImportantBluFabBeta(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("BluFab_Beta.txt"):
			is_important = True
			break

	return is_important

def isImportantBluFabOfficial(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("BluFab_Official.txt"):
			is_important = True
			break

	return is_important

def isImportantTDMore(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("TDMore.txt"):
			is_important = True
			break

	return is_important


def isImportantSafeDVDCopy(change):
	is_important = False
	for each_file in  change.files:
		if each_file.startswith("SafeDVDCopy.txt"):
			is_important = True
			break

	return is_important

def isImportantVidOnme(change):
	is_important = False
	for each_file in  change.files:
		if each_file.startswith("VidOnme.txt"):
			is_important = True
			break

	return is_important

def isImportantRestoreTDMore(change):
	is_important = False
	for each_file in  change.files:
		if each_file.startswith("Backup_TDMore.txt"):
			is_important = True
			break

	return is_important


def isImportantRestoreWinVidOnVideoToolkit(change):
	is_important = False
	for each_file in  change.files:
		if each_file.startswith("Backup_Win_VidOn_Video_Toolkit.txt"):
			is_important = True
			break

	return is_important


def isImportantRestoreMacVidOnVideoToolkit(change):
	is_important = False
	for each_file in  change.files:
		if each_file.startswith("Backup_Mac_VidOn_Video_Toolkit.txt"):
			is_important = True
			break

	return is_important


def isImportantTDMoreBackup(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("TDMore_Backup.txt"):
			is_important = True
			break

	return is_important

def isImportantVidOnmeBackup(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("VidOnme_Backup.txt"):
			is_important = True
			break

	return is_important


def isImportantRestoreWinSafeDVDCopy(change):
	is_important = False
	for each_file in  change.files:
		if each_file.startswith("Backup_Win_SafeDVDCopy.txt"):
			is_important = True
			break

	return is_important


def isImportantRestoreMacSafeDVDCopy(change):
	is_important = False
	for each_file in  change.files:
		if each_file.startswith("Backup_Mac_SafeDVDCopy.txt"):
			is_important = True
			break

	return is_important


def isImportantDVDFabRetailJapan(change):
	is_important = False

	for each_file in  change.files:
		if each_file.startswith("DVDFab_Retail_Japan.txt"):
			is_important = True
			break

	return is_important


#all_beta_package------builder name
scheduler_DVDFab9_Beta = SingleBranchScheduler(	name = "dvdfab_developer_Beta",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["all_beta_package"],
										fileIsImportant = isImportantBeta,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})

#all_official_package-----builder name
scheduler_DVDFab9_Official = SingleBranchScheduler(	name = "dvdfab_developer",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["all_official_package"],
										fileIsImportant = isImportantOfficial,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										

#backup_dvdfab9_win-----builder name
backup_dvdfab9_win = SingleBranchScheduler(	name = "backup_dvdfab_win",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["backup_dvdfab9_win"],
										fileIsImportant = isImportantRestoreWin,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										

#backup_dvdfab9_mac-----builder name
backup_dvdfab9_mac = SingleBranchScheduler(	name = "backup_dvdfab_mac",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["backup_dvdfab9_mac"],
										fileIsImportant = isImportantRestoreMac,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										
#copy_dvdfab9_official_folder-----builder name
restore_DVDFab_Package_folder = SingleBranchScheduler(	name = "copy_dvdfab9_official_folder",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_copy_dvdfab9_official_folder"],
										fileIsImportant = isImportantRestoreWin,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										
#package_dvdfab9_beta-----builder name
scheduler_package_DVDFab9_Beta = SingleBranchScheduler(	name = "package_dvdfab9_beta",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_dvdfab9_beta"],
										fileIsImportant = isImportantDVDFabBeta,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										
#package_dvdfab9_official-----builder name
scheduler_package_DVDFab9_Official = SingleBranchScheduler(	name = "package_dvdfab9_official",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_dvdfab9_official"],
										fileIsImportant = isImportantDVDFabOfficial,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										


#package_blufab9_beta-----builder name
scheduler_package_BluFab9_Beta = SingleBranchScheduler(	name = "package_blufab9_beta",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_blufab9_beta"],
										fileIsImportant = isImportantBluFabBeta,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										
#package_blufab9_official-----builder name
scheduler_package_BluFab9_Official = SingleBranchScheduler(	name = "package_blufab9_official",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_blufab9_official"],
										fileIsImportant = isImportantBluFabOfficial,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										
#package_tdmore-----builder name
scheduler_package_tdmore = SingleBranchScheduler(	name = "package_tdmore",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_tdmore"],
										fileIsImportant = isImportantTDMore,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										


#daily build: dvdfab9_ts rebuild release-----builder name
scheduler_daily_build_win = SingleBranchScheduler(	name = "daily_build_win",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["dvdfab9_ts_release"],
										fileIsImportant = isImportantDailyBuildWin,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										


#daily build: mac_107 rebuild release-----builder name
scheduler_daily_build_mac = SingleBranchScheduler(	name = "daily_build_mac",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["mac_107_release"],
										fileIsImportant = isImportantDailyBuildMac,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										

#package_safedvdcopy-----builder name
scheduler_package_safedvdcopy = SingleBranchScheduler(	name = "package_safedvdcopy",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_safedvdcopy"],
										fileIsImportant = isImportantSafeDVDCopy,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										
#package_vidonme-----builder name
scheduler_package_vidonme = SingleBranchScheduler(	name = "package_vidonme",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_vidonme"],
										fileIsImportant = isImportantVidOnme,
										onlyImportant = True,
                                        properties={'owner':["shaofei.ma@goland.cn","dedong.xu@goland.cn"]})										

#restore TDMore-----builder name
restore_TDMore = SingleBranchScheduler(	name = "restore_tdmore",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["restore_tdmore","restore_tdmore_package_folder"],
										fileIsImportant = isImportantRestoreTDMore,
										onlyImportant = True,
                                        properties={'owner':["dedong.xu@goland.cn"]})										


#restore win vidon video toolkit-----builder name
restore_Win_VidOn_Video_Toolkit = SingleBranchScheduler(	name = "restore_win_vidon_video_toolkit",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["restore_vidonme","restore_vidonme_package_folder"],
										fileIsImportant = isImportantRestoreWinVidOnVideoToolkit,
										onlyImportant = True,
                                        properties={'owner':["dedong.xu@goland.cn"]})										

#restore mac vidon video toolkit-----builder name
restore_Mac_VidOn_Video_Toolkit = SingleBranchScheduler(	name = "restore_mac_vidon_video_toolkit",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["restore_mac_vidonme"],
										fileIsImportant = isImportantRestoreMacVidOnVideoToolkit,
										onlyImportant = True,
                                        properties={'owner':["dedong.xu@goland.cn"]})										

#package_tdmore_backup-----builder name
scheduler_package_tdmore_backup = SingleBranchScheduler(	name = "package_tdmore_backup",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_tdmore_backup"],
										fileIsImportant = isImportantTDMoreBackup,
										onlyImportant = True,
                                        properties={'owner':["dedong.xu@goland.cn"]})										

#package_vidonme_backup-----builder name
scheduler_package_vidonme_backup = SingleBranchScheduler(	name = "package_vidonme_backup",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_vidonme_backup"],
										fileIsImportant = isImportantVidOnmeBackup,
										onlyImportant = True,
                                        properties={'owner':["dedong.xu@goland.cn"]})										


#restore win safedvdcopy-----builder name
restore_Win_SafeDVDCopy = SingleBranchScheduler(	name = "restore_win_safedvdcopy",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["restore_safedvdcopy","restore_safedvdcopy_package_folder"],
										fileIsImportant = isImportantRestoreWinSafeDVDCopy,
										onlyImportant = True,
                                        properties={'owner':["dedong.xu@goland.cn"]})										

#restore mac safedvdcopy-----builder name
restore_Mac_SafeDVDCopy = SingleBranchScheduler(	name = "restore_mac_safedvdcopy",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["restore_mac_safedvdcopy"],
										fileIsImportant = isImportantRestoreMacSafeDVDCopy,
										onlyImportant = True,
                                        properties={'owner':["dedong.xu@goland.cn"]})										

#package_dvdfab_retail_japan-----builder name
scheduler_package_dvdfab_retail_japan = SingleBranchScheduler(	name = "package_dvdfab_retail_japan",
										change_filter = ChangeFilter(branch_fn=dev_branch_fn),
										treeStableTimer = 5,
										builderNames=["package_dvdfab_retail_japan"],
										fileIsImportant = isImportantDVDFabRetailJapan,
										onlyImportant = True,
                                        properties={'owner':["dedong.xu@goland.cn"]})										





DVDFab9_dev_build = timed.Nightly(
					name = 'DVDFab9_dev',
					builderNames = ["DVDFab9_dev_builder"],
					branch = "trunk/goland",
					hour = 32,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		
                    
DVDFab9_dev_rebuild = timed.Nightly(
					name = 'DVDFab9_dev_rebuild',
					builderNames = ["DVDFab9_dev_rebuild"],
					branch = "trunk/goland",
					hour = 030,
					minute = 30,
					dayOfWeek = [6])		
                                                                
DVDFab9_mac_build = timed.Nightly(
					name = 'DVDFab9_mac',
					builderNames = ["DVDFab9_mac_mini"],
					branch = "trunk/goland",
					hour = 32,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])	    

DVDFab9_mac_rebuild = timed.Nightly(
					name = 'DVDFab9_mac_rebuild',
					builderNames = ["DVDFab9_mac_mini_rebuild"],
					branch = "trunk/goland",
					hour = 030,
					minute = 30,
					dayOfWeek = [6])	 
   
DVDFab9_mobile2_unittest_build = timed.Nightly(
					name = 'DVDFab9_mobile2_unittest',
					builderNames = ["DVDFab9_mobile2_unittest"],
					branch = "trunk_mobile2_unittest/goland",
					hour = [222],
					minute = 00,
					dayOfWeek = [0, 1, 2, 3, 4, 5])	   


#from 201
#### DVDFab 8: win--->201 Mac-->103				
daily_build = timed.Nightly(
					name = 'daily_build',
					builderNames = ["win_stable_trunk"],
					branch = "trunk/goland",
                                        month = 60,
                                        dayOfMonth = 170,					
					hour = [120],
					minute = 30)
	
###DVDFab 9 : win--->168, mac--->93	
					
DVDFab_mac_107 = timed.Nightly(
					name = 'DVDFab_mac_107',
					builderNames = ["mac_107"],
					branch = "trunk/goland",
					hour = [12],
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4,5])	

DVDFab_mac_107_release = timed.Nightly(
					name = 'DVDFab_mac_107_release',
					builderNames = ["mac_107_release"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)					
					
DVDFab_mac_107_beta_package = timed.Nightly(
					name = 'Package_Mac_DVDFab9_Beta',
					builderNames = ["package_mac_dvdfab9_beta"],
					branch = "trunk/goland",
					hour = [120],
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4,5])	
DVDFab_mac_107_official_package = timed.Nightly(
					name = 'Package_Mac_DVDFab9_Official',
					builderNames = ["package_mac_dvdfab9_official"],
					branch = "trunk/goland",
					hour = [120],
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4,5])	

DVDFab9_ts_win = timed.Nightly(
					name = 'DVDFab9_ts_win',
					builderNames = ["dvdfab9_ts"],
					branch = "trunk/goland",
					hour = [12],
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])
					
					
#for DVDFab9 rebuild
DVDFab9_ts_win_rebuild = timed.Nightly(
					name = 'DVDFab9_ts_win_rebuild',
					builderNames = ["dvdfab9_ts_rebuild", "mac_107_rebuild"],
					branch = "trunk/goland",
					hour = [3],
					minute = 30)
					#dayOfWeek = [0])
					
#for DVDFab9 Basement rebuild
DVDFab9_basement_rebuild = timed.Nightly(
					name = 'DVDFab9_basement_rebuild',
					builderNames = ["dvdfab9_ts_basement_rebuild", "mac_107_basement_rebuild"],
					branch = "trunk/goland",
					hour = [30],
					minute = 30)
					#dayOfWeek = [0])


#for DVDFab9 release 					
DVDFab9_ts_win_release = timed.Nightly(
					name = 'DVDFab9_ts_win_release',
					builderNames = ["dvdfab9_ts_release"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)
					
####DVDFab 9 ts: win --->168					
DVDFab9_Win_168 = timed.Nightly(
					name = 'DVDFab9_Win_168',
					builderNames = ["dvdfab9_win"],
					branch = "trunk/goland",
					hour = [8],
					minute = 1,
					dayOfWeek = [2])	


					
## backup beta working branch : win --->168					
scheduler_Backup_DVDFab9_Win = timed.Nightly(
					name = 'scheduler_backup_dvdfab9_win',
					builderNames = ["backup_dvdfab9_win"],
					branch = "backup_DVDFab9_win",
					month = 60,
					dayOfMonth = 17,
					hour = [12],
					minute = 0)		
					
## backup beta working branch : mac --->93	
scheduler_Backup_DVDFab9_Mac = timed.Nightly(
					name = 'scheduler_backup_dvdfab9_mac',
					builderNames = ["backup_dvdfab9_mac"],
					branch = "backup_DVDFab9_mac",
					month = 60,
					dayOfMonth = 17,
					hour = [12],
					minute = 0)		


## build DVDFab official : win --->168	
scheduler_DVDFab9_Official_Win = timed.Nightly(
					name = 'scheduler_dvdfab9_official_win',
					builderNames = ["dvdfab9_official_win"],
					branch = "dvdfab9_official_win",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)		
## build DVDFab official : mac --->93	
scheduler_DVDFab9_Official_Mac = timed.Nightly(
					name = 'scheduler_dvdfab9_official_mac',
					builderNames = ["dvdfab9_official_mac"],
					branch = "dvdfab9_official_mac",
					month = 60,
					dayOfMonth = 170,
					hour = [102],
					minute = 0)		



#from 50

scheduler_Package_DVDFab8 = timed.Nightly(
					name = 'scheduler_package_dvdfab8',
					builderNames = ["package_dvdfab8"],
					branch = "package_DVDFab8",
					month = 10,
					dayOfMonth = 32,
					hour = [18],
					minute = 0)		

del_scheduler_Package_DVDFab9_Beta = timed.Nightly(
					name = 'scheduler_package_dvdfab9_beta',
					builderNames = ["package_dvdfab9_beta"],
					branch = "package_DVDFab9_beta",
					month = 10,
					dayOfMonth = 32,
					hour = [18],
					minute = 0)	


del_scheduler_Package_DVDFab9_Official = timed.Nightly(
					name = 'scheduler_package_dvdfab9_official',
					builderNames = ["package_dvdfab9_official"],
					branch = "package_DVDFab9_official",
					month = 10,
					dayOfMonth = 32,
					hour = [18],
					minute = 0)

scheduler_Package_DVDFab9_Retail = timed.Nightly(
					name = 'scheduler_package_dvdfab9_retail',
					builderNames = ["package_dvdfab9_retail"],
					branch = "package_DVDFab9_retail",
					month = 10,
					dayOfMonth = 32,
					hour = [18],
					minute = 0)


scheduler_copy_DVDFab9_Official_Folder = timed.Nightly(
					name = 'scheduler_copy_dvdfab9_official_folder',
					builderNames = ["package_copy_dvdfab9_official_folder"],
					branch = "copy_DVDFab9_official_folder",
					month = 10,
					dayOfMonth = 32,
					hour = [18],
					minute = 0)		

scheduler_Package_DVDFab9_Addon = timed.Nightly(
					name = 'scheduler_package_dvdfab9_addon',
					builderNames = ["package_dvdfab9_addon"],
					branch = "package_DVDFab9_addon",
					month = 10,
					dayOfMonth = 32,
					hour = [18],
					minute = 0)		


scheduler_Official_Fab_Daily_Build = timed.Nightly(
					name = 'scheduler_official_fab_daily_build',
					builderNames = ["official_fab_daily_build"],
					branch = "Official_Fab_Daily_Build",
					month = 10,
					dayOfMonth = 32,
					hour = [18],
					minute = 0)					

scheduler_Mac_Official_Fab_Daily_Build = timed.Nightly(
					name = 'scheduler_mac_official_fab_daily_build',
					builderNames = ["mac_official_fab_daily_build"],
					branch = "Mac_Official_Fab_Daily_Build",
					month = 10,
					dayOfMonth = 32,
					hour = [18],
					minute = 0)					


TDMore_package_build = timed.Nightly(
					name = 'TDMore_package',
					builderNames = ["package_tdmore"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

Dev_TDMore_build = timed.Nightly(
					name = 'Dev_TDMore_build',
					builderNames = ["Dev_tdmore_builder"],
					branch = "trunk/build",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

Beta_Fab_no_compile_build = timed.Nightly(
					name = 'Beta_Fab_No_Compile',
					builderNames = ["beta_fab_no_compile"],
					branch = "trunk/goland",
					hour = [120],
					minute = 30,
					dayOfWeek = [5])

Mac_Beta_Fab_no_compile_build = timed.Nightly(
					name = 'Mac_Beta_Fab_No_Compile',
					builderNames = ["mac_beta_fab_no_compile"],
					branch = "trunk/goland",
					hour = [120],
					minute = 30,
					dayOfWeek = [5])	

Package_Mac_SafeDVDCopy_build = timed.Nightly(
					name = 'Package_Mac_SafeDVDCopy',
					builderNames = ["package_mac_safedvdcopy"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
                                        dayOfWeek = [5])

Package_Mac_SafeDVDCopy_Backup_build = timed.Nightly(
					name = 'Package_Mac_SafeDVDCopy_Backup',
					builderNames = ["package_mac_safedvdcopy_backup"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
                                        dayOfWeek = [5])

Package_SafeDVDCopy_Backup_build = timed.Nightly(
					name = 'Package_SafeDVDCopy_Backup',
					builderNames = ["package_safedvdcopy_backup"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
                                        dayOfWeek = [5])

TDMore_DVD_Copy_package_build = timed.Nightly(
					name = 'TDMore_DVD_Copy_package',
					builderNames = ["package_tdmore_dvd_copy"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

TDMore_Free_DVD_Copy_package_build = timed.Nightly(
					name = 'TDMore_Free_DVD_Copy_package',
					builderNames = ["package_tdmore_free_dvd_copy"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

TDMore_DVD_Copy_for_GOTD_package_build = timed.Nightly(
					name = 'TDMore_DVD_Copy_for_GOTD_package',
					builderNames = ["package_tdmore_dvd_copy_for_gotd"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

TDMore_DVD_Converter_package_build = timed.Nightly(
					name = 'TDMore_DVD_Converter_package',
					builderNames = ["package_tdmore_dvd_converter"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		
TDMore_DVD_to_AVI_Converter_package_build = timed.Nightly(
					name = 'TDMore_DVD_to_AVI_Converter_package',
					builderNames = ["package_tdmore_dvd_to_avi_converter"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

TDMore_DVD_Converter_for_GOTD_package_build = timed.Nightly(
					name = 'TDMore_DVD_Converter_for_GOTD_package',
					builderNames = ["package_tdmore_dvd_converter_for_gotd"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

TDMore_Bluray_Copy_package_build = timed.Nightly(
					name = 'TDMore_Bluray_Copy_package',
					builderNames = ["package_tdmore_bluray_copy"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

TDMore_Bluray_Converter_package_build = timed.Nightly(
					name = 'TDMore_Bluray_Converter_package',
					builderNames = ["package_tdmore_bluray_converter"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		
TDMore_Bluray_Converter_Share_Version_package_build = timed.Nightly(
					name = 'TDMore_Bluray_Converter_Share_Version_package',
					builderNames = ["package_tdmore_bluray_converter_share_version"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

Package_SafeDVDCopy_Only_build = timed.Nightly(
					name = 'Package_SafeDVDCopy_Only',
					builderNames = ["package_safedvdcopy_only"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
                                        dayOfWeek = [5])

Package_SafeDVDCopy_Trial_build = timed.Nightly(
					name = 'Package_SafeDVDCopy_Trial',
					builderNames = ["package_safedvdcopy_trial"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
                                        dayOfWeek = [5])


Package_SafeDVDCopy_Premium_build = timed.Nightly(
					name = 'Package_SafeDVDCopy_Premium',
					builderNames = ["package_safedvdcopy_premium"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
                                        dayOfWeek = [5])

Package_SafeDVDCopy_Premium_Trial_build = timed.Nightly(
					name = 'Package_SafeDVDCopy_Premium_Trial',
					builderNames = ["package_safedvdcopy_premium_trial"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
                                        dayOfWeek = [5])

## build DVDFab official : win --->168	
scheduler_DVDFab9_Official_Win_new_lib = timed.Nightly(
					name = 'scheduler_dvdfab9_official_win_new_lib',
					builderNames = ["dvdfab9_official_win_new_lib"],
					branch = "dvdfab9_official_win_new_lib",
					month = 60,
					dayOfMonth = 170,
					hour = [102],
					minute = 0)		
## build DVDFab official : mac --->93	
scheduler_DVDFab9_Official_Mac_new_lib = timed.Nightly(
					name = 'scheduler_dvdfab9_official_mac_new_lib',
					builderNames = ["dvdfab9_official_mac_new_lib"],
					branch = "dvdfab9_official_mac_new_lib",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)		

DVDFab9_Basement_Merge_build = timed.Nightly(
					name = 'DVDFab9_Basement_Merge',
					builderNames = ["DVDFab9_basement_merge"],
					branch = "trunk/goland",
					hour = 32,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

DVDFab9_Basement_Merge_rebuild = timed.Nightly(
					name = 'DVDFab9_Basement_Merge_rebuild',
					builderNames = ["DVDFab9_basement_merge_rebuild"],
					branch = "trunk/goland",
					hour = 32,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

VidOnme_package_build = timed.Nightly(
					name = 'VidOnme_package',
					builderNames = ["package_vidonme"],
					branch = "trunk_vidonme/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

Mac_VidOnme_package_build = timed.Nightly(
					name = 'mac_VidOnme_package',
					builderNames = ["package_mac_vidonme"],
					branch = "trunk_mac_vidonme/goland",
					hour = [120],
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4,5])	

## Mac SafeDVDCopy Backup  --->93	
scheduler_Mac_SafeDVDCopy_Backup = timed.Nightly(
					name = 'scheduler_mac_safedvdcopy_backup',
					builderNames = ["mac_safedvdcopy_backup"],
					branch = "mac_safedvdcopy_backup",
					month = 60,
					dayOfMonth = 170,
					hour = [102],
					minute = 0)		

## Win SafeDVDCopy Backup  --->168	
scheduler_Win_SafeDVDCopy_Backup = timed.Nightly(
					name = 'scheduler_win_safedvdcopy_backup',
					builderNames = ["safedvdcopy_backup"],
					branch = "safedvdcopy_backup",
					month = 60,
					dayOfMonth = 170,
					hour = [102],
					minute = 0)		

TDMore_Video_Converter_package_build = timed.Nightly(
					name = 'TDMore_Video_Converter_package',
					builderNames = ["package_tdmore_video_converter"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		


#for TDMore release 					
TDMore_release = timed.Nightly(
					name = 'TDMore_win_release',
					builderNames = ["tdmore_release", "tdmore_no_compile"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)

#for VidOn Video Toolit release 					
VidOnme_release = timed.Nightly(
					name = 'VidOnme_release',
					builderNames = ["vidonme_release", "vidonme_no_compile", "mac_vidonme_release","mac_vidonme_no_compile"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)


## Win TDMore Backup  --->168	
scheduler_TDMore_Backup = timed.Nightly(
					name = 'scheduler_tdmore_backup',
					builderNames = ["tdmore_backup","tdmore_backup_no_compile"],
					branch = "tdmore_backup",
					month = 60,
					dayOfMonth = 170,
					hour = [102],
					minute = 0)		

## Win VidOn Video Toolkit Backup  --->168	
scheduler_Win_VidOnme_Backup = timed.Nightly(
					name = 'scheduler_vidonme_backup',
					builderNames = ["vidonme_backup","vidonme_backup_no_compile"],
					branch = "vidonme_backup",
					month = 60,
					dayOfMonth = 170,
					hour = [102],
					minute = 0)		

## Mac VidOn Video Toolkit Backup  --->168	
scheduler_Mac_VidOnme_Backup = timed.Nightly(
					name = 'scheduler_mac_vidonme_backup',
					builderNames = ["mac_vidonme_backup","mac_vidonme_backup_no_compile"],
					branch = "mac_vidonme_backup",
					month = 60,
					dayOfMonth = 170,
					hour = [102],
					minute = 0)		


## build Backup DVDFab_stable_trunk--->168	
scheduler_backup_DVDFab_stable_trunk = timed.Nightly(
					name = 'backup_DVDFab_stable_trunk_build',
					builderNames = ["backup_DVDFab_stable_trunk"],
					branch = "backup_dvdfab_stable_trunk",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)		

#for SafeDVDCopy release 					
SafeDVDCopy_release = timed.Nightly(
					name = 'SafeDVDCopy_release',
					builderNames = ["safedvdcopy_release", "safedvdcopy_no_compile", "mac_safedvdcopy_release","mac_safedvdcopy_no_compile"],
					#builderNames = ["safedvdcopy_release", "safedvdcopy_no_compile"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)

#for TDMore developer build 30 					
TDMore_developer_build = timed.Nightly(
					name = 'TDMore_developer_build',
					builderNames = ["tdmore_release_30", "tdmore_rebuild_30"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)

#for VidOn Video Toolit developer release 30
VidOnme_developer_build = timed.Nightly(
					name = 'VidOnme_developer_build',
					builderNames = ["vidonme_release_30", "vidonme_rebuild_30"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)

#for SafeDVDCopy developer release 30
SafeDVDCopy_developer_build = timed.Nightly(
					name = 'SafeDVDCopy_developer_build',
					builderNames = ["safedvdcopy_release_30", "safedvdcopy_rebuild_30"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)

sign_videodownloader_browser_build = timed.Nightly(
					name = 'Sign_VideoDownlaoder',
					builderNames = ["sign_videodownloader_browser"],
					branch = "trunk/goland",
					hour = 32,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

TDMore_Bluray_Copy_Share_Version_package_build = timed.Nightly(
					name = 'TDMore_Bluray_Copy_Share_Version_package',
					builderNames = ["package_tdmore_bluray_copy_share_version"],
					branch = "trunk_tdmore/goland",
					hour = 25,
					minute = 30,
					dayOfWeek = [0, 1, 2, 3, 4, 5])		

Package_DVDFab_retail_Japan = timed.Nightly(
					name = 'scheduler_package_dvdfab9_retail_japan',
					builderNames = ["package_dvdfab_retail_japan"],
					branch = "package_DVDFab_retail_japan",
					month = 10,
					dayOfMonth = 32,
					hour = [18],
					minute = 0)	


#for DVDFab retail japan release 					
DVDFab_retail_japan_release = timed.Nightly(
					name = 'dvdfab_retail_japan_release',
					builderNames = ["dvdfab_retail_japan_release"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)

#for Mac DVDFab retail japan release 					
Mac_DVDFab_retail_japan_release = timed.Nightly(
					name = 'mac_dvdfab_retail_japan_release',
					builderNames = ["mac_dvdfab_retail_japan_release"],
					branch = "trunk/goland",
					month = 60,
					dayOfMonth = 170,
					hour = [120],
					minute = 0)

c['schedulers'] = []
c['schedulers'].append(DVDFab9_dev_rebuild)
c['schedulers'].append(DVDFab9_mac_rebuild)
#c['schedulers'].append(scheduler_dev)
c['schedulers'].append(DVDFab9_mobile2_unittest_build)


#from 201
c['schedulers'].append(daily_build)
c['schedulers'].append(DVDFab_mac_107)
c['schedulers'].append(DVDFab_mac_107_release)
c['schedulers'].append(DVDFab_mac_107_beta_package)
c['schedulers'].append(DVDFab_mac_107_official_package)
c['schedulers'].append(DVDFab9_ts_win)
c['schedulers'].append(DVDFab9_ts_win_rebuild)
c['schedulers'].append(DVDFab9_ts_win_release)

c['schedulers'].append(scheduler_daily_build_win)
c['schedulers'].append(scheduler_daily_build_mac)

c['schedulers'].append(DVDFab9_Win_168)
c['schedulers'].append(backup_dvdfab9_win)
c['schedulers'].append(backup_dvdfab9_mac)
c['schedulers'].append(scheduler_DVDFab9_Official_Win)
c['schedulers'].append(scheduler_DVDFab9_Official_Mac)
c['schedulers'].append(DVDFab9_basement_rebuild)


c['schedulers'].append(Beta_Fab_no_compile_build)
c['schedulers'].append(Mac_Beta_Fab_no_compile_build)
c['schedulers'].append(Package_Mac_SafeDVDCopy_build)
c['schedulers'].append(Package_Mac_SafeDVDCopy_Backup_build)
c['schedulers'].append(Package_SafeDVDCopy_Backup_build)



#from 50
c['schedulers'].append(scheduler_Package_DVDFab8)

c['schedulers'].append(scheduler_DVDFab9_Beta)
c['schedulers'].append(scheduler_DVDFab9_Official)

c['schedulers'].append(scheduler_Package_DVDFab9_Retail)
#c['schedulers'].append(scheduler_copy_DVDFab9_Official_Folder)
c['schedulers'].append(restore_DVDFab_Package_folder)
c['schedulers'].append(scheduler_Package_DVDFab9_Addon)
c['schedulers'].append(scheduler_Official_Fab_Daily_Build)


c['schedulers'].append(scheduler_Mac_Official_Fab_Daily_Build)


c['schedulers'].append(scheduler_package_DVDFab9_Beta)
c['schedulers'].append(scheduler_package_DVDFab9_Official)
c['schedulers'].append(scheduler_package_BluFab9_Beta)
c['schedulers'].append(scheduler_package_BluFab9_Official)
c['schedulers'].append(scheduler_package_tdmore)
c['schedulers'].append(TDMore_package_build)
c['schedulers'].append(Dev_TDMore_build)
c['schedulers'].append(scheduler_package_safedvdcopy)
c['schedulers'].append(scheduler_package_vidonme)

c['schedulers'].append(TDMore_DVD_Copy_package_build)
c['schedulers'].append(TDMore_Free_DVD_Copy_package_build)
c['schedulers'].append(TDMore_DVD_Copy_for_GOTD_package_build)
c['schedulers'].append(TDMore_DVD_Converter_package_build)
c['schedulers'].append(TDMore_DVD_to_AVI_Converter_package_build)
c['schedulers'].append(TDMore_DVD_Converter_for_GOTD_package_build)
c['schedulers'].append(TDMore_Bluray_Copy_package_build)
c['schedulers'].append(TDMore_Bluray_Converter_package_build)
c['schedulers'].append(TDMore_Bluray_Converter_Share_Version_package_build)
c['schedulers'].append(TDMore_Video_Converter_package_build)

c['schedulers'].append(Package_SafeDVDCopy_Only_build)
c['schedulers'].append(Package_SafeDVDCopy_Trial_build)
c['schedulers'].append(Package_SafeDVDCopy_Premium_build)
c['schedulers'].append(Package_SafeDVDCopy_Premium_Trial_build)

c['schedulers'].append(scheduler_DVDFab9_Official_Win_new_lib)
c['schedulers'].append(scheduler_DVDFab9_Official_Mac_new_lib)
c['schedulers'].append(DVDFab9_Basement_Merge_build)
c['schedulers'].append(DVDFab9_Basement_Merge_rebuild)
c['schedulers'].append(VidOnme_package_build)
c['schedulers'].append(Mac_VidOnme_package_build)
c['schedulers'].append(scheduler_Mac_SafeDVDCopy_Backup)
c['schedulers'].append(scheduler_Win_SafeDVDCopy_Backup)


c['schedulers'].append(TDMore_release)
c['schedulers'].append(VidOnme_release)
c['schedulers'].append(restore_TDMore)
c['schedulers'].append(restore_Win_VidOn_Video_Toolkit)
c['schedulers'].append(restore_Mac_VidOn_Video_Toolkit)

c['schedulers'].append(scheduler_TDMore_Backup)
c['schedulers'].append(scheduler_Win_VidOnme_Backup)
c['schedulers'].append(scheduler_Mac_VidOnme_Backup)
c['schedulers'].append(scheduler_backup_DVDFab_stable_trunk)

c['schedulers'].append(scheduler_package_tdmore_backup)
c['schedulers'].append(scheduler_package_vidonme_backup)

c['schedulers'].append(SafeDVDCopy_release)

c['schedulers'].append(restore_Win_SafeDVDCopy)
c['schedulers'].append(restore_Mac_SafeDVDCopy)

c['schedulers'].append(TDMore_developer_build)
c['schedulers'].append(VidOnme_developer_build)
c['schedulers'].append(SafeDVDCopy_developer_build)
c['schedulers'].append(sign_videodownloader_browser_build)
c['schedulers'].append(TDMore_Bluray_Copy_Share_Version_package_build)
c['schedulers'].append(Package_DVDFab_retail_Japan)
c['schedulers'].append(DVDFab_retail_japan_release)
c['schedulers'].append(Mac_DVDFab_retail_japan_release)



from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.schedulers.forcesched import ForceScheduler
from buildbot.changes import filter

c['schedulers'].append(ForceScheduler(
                            name="all",
                            builderNames=["DVDFab9_dev_builder","DVDFab9_dev_rebuild", "DVDFab9_mac_mini", "DVDFab9_mac_mini_rebuild","backup_dvdfab9_win", "backup_dvdfab9_mac",\
					      "DVDFab9_mobile2_unittest","win_stable_trunk","mac_107","mac_107_basement_rebuild","mac_107_release","dvdfab9_ts","dvdfab9_ts_basement_rebuild","dvdfab9_ts_rebuild","mac_107_rebuild",\
					      "dvdfab9_ts_release","dvdfab9_win","dvdfab9_official_win","dvdfab9_official_mac","package_dvdfab8", "all_beta_package",\
			                      "all_official_package", "package_dvdfab9_retail", "package_copy_dvdfab9_official_folder","package_dvdfab9_addon",\
                                              "official_fab_daily_build", "mac_official_fab_daily_build", "package_dvdfab9_beta", "package_dvdfab9_official",\
                                              "package_blufab9_beta","package_blufab9_official", "package_tdmore", "Dev_tdmore_builder","package_safedvdcopy",\
                                              "package_mac_dvdfab9_beta","package_mac_dvdfab9_official","beta_fab_no_compile", "mac_beta_fab_no_compile",\
                                              "package_mac_safedvdcopy", "package_mac_safedvdcopy_backup", "package_safedvdcopy_backup","package_tdmore_dvd_copy",\
                                              "package_tdmore_free_dvd_copy","package_tdmore_dvd_copy_for_gotd","package_tdmore_dvd_converter",\
                                              "package_tdmore_bluray_copy","package_tdmore_bluray_converter","package_safedvdcopy_only","package_safedvdcopy_trial",\
                                              "package_safedvdcopy_premium","package_safedvdcopy_premium_trial","dvdfab9_official_win_new_lib",\
                                              "dvdfab9_official_mac_new_lib","package_mac_safedvdcopy_only","package_mac_safedvdcopy_trial",\
                                              "package_mac_safedvdcopy_premium","package_mac_safedvdcopy_premium_trial","package_mac_safedvdcopy_backup_only",\
                                              "package_mac_safedvdcopy_backup_trial","package_mac_safedvdcopy_backup_premium","package_mac_safedvdcopy_backup_premium_trial",\
                                              "DVDFab9_basement_merge","DVDFab9_basement_merge_rebuild","package_tdmore_dvd_converter_for_gotd",\
                                              "package_tdmore_bluray_converter_share_version","package_tdmore_dvd_to_avi_converter","tdmore_release","tdmore_no_compile",\
                                              "safedvdcopy_release","safedvdcopy_no_compile","vidonme_release","vidonme_no_compile", "package_vidonme","mac_vidonme_release",\
                                              "mac_vidonme_no_compile","package_mac_vidonme","mac_safedvdcopy_release","mac_safedvdcopy_backup", "safedvdcopy_backup",\
                                              "package_tdmore_video_converter","restore_tdmore","restore_vidonme","restore_mac_vidonme","tdmore_backup","vidonme_backup",\
                                              "mac_vidonme_backup","backup_DVDFab_stable_trunk","tdmore_backup_no_compile","vidonme_backup_no_compile",\
                                              "mac_vidonme_backup_no_compile","restore_tdmore_package_folder","restore_vidonme_package_folder","package_tdmore_backup",\
                                              "package_vidonme_backup","mac_safedvdcopy_no_compile","restore_safedvdcopy","restore_safedvdcopy_package_folder",\
                                              "restore_mac_safedvdcopy","tdmore_release_30","tdmore_rebuild_30","vidonme_release_30","vidonme_rebuild_30",\
                                              "safedvdcopy_release_30","safedvdcopy_rebuild_30", "sign_videodownloader_browser","package_tdmore_bluray_copy_share_version",
                                              "package_dvdfab_retail_japan","dvdfab_retail_japan_release", "mac_dvdfab_retail_japan_release"]))



################################# Factory  ################################

#DVDFab_dev
import dvdfab_factory
f1 = BuildFactory()
Dev_build = dvdfab_factory.WinDVDFabFactoryDev(f1)
f1 = Dev_build.f_dvdfab_branch()

#DVDFab_dev_rebuild
import dvdfab_factory_rebuild
f5 = BuildFactory()
Dev_rebuild = dvdfab_factory_rebuild.WinDVDFabFactoryDev(f5)
f5 = Dev_rebuild.f_dvdfab_branch()


#for DVDFab mac mini
import dvdfab_factory_mac_mini
f2 = BuildFactory()
dvdfab_mac_mini = dvdfab_factory_mac_mini.MacDVDFabFactory(f2)
f2 = dvdfab_mac_mini.f_dvdfab()

#for DVDFab mac mini rebuild
import dvdfab_factory_mac_mini_rebuild
f6 = BuildFactory()
dvdfab_mac_mini_rebuild = dvdfab_factory_mac_mini_rebuild.MacDVDFabFactory(f6)
f6 = dvdfab_mac_mini_rebuild.f_dvdfab()

#for DVDFab mobile2 unittest
import dvdfab_factory_mobile2_unittest
f3 = BuildFactory()
Dev_build = dvdfab_factory_mobile2_unittest.WinDVDFabFactoryDev(f3)
f3 = Dev_build.f_dvdfab_branch()

#from 201
import dvdfab8_factory
f7 = BuildFactory()
win_build = dvdfab8_factory.WinDVDFabFactory(f7)
f7 = win_build.f_dvdfab_branch()


#for DVDFab mac 107
import dvdfab_factory_mac107
f8 = BuildFactory()
dvdfab_mac_107 = dvdfab_factory_mac107.MacDVDFabFactory107(f8)
f8 = dvdfab_mac_107.f_dvdfab()

#for DVDFab9 ts win
import dvdfab_factory_dvdfab9_ts
f9 = BuildFactory()
dvdfab_ts_win = dvdfab_factory_dvdfab9_ts.WinDVDFabFactoryTs(f9)
f9 = dvdfab_ts_win.f_dvdfab_branch()


#for DVDFab9 win 168
import dvdfab_factory_dvdfab9_win_168
f10 = BuildFactory()
dvdfab_win_168 = dvdfab_factory_dvdfab9_win_168.WinDVDFabFactory168(f10)
f10 = dvdfab_win_168.f_dvdfab_branch()


#add below on 2013-07-04
#for backup dvdfab9 win
import dvdfab_factory_backup_DVDFab9_win
f11 = BuildFactory()
backup_DVDFab9_win = dvdfab_factory_backup_DVDFab9_win.BackupDVDFab9WinFactory(f11)
f11 = backup_DVDFab9_win.f_backup_dvdfab9_win()

#for backup dvdfab9 mac
import dvdfab_factory_backup_DVDFab9_mac
f12 = BuildFactory()
backup_DVDFab9_mac = dvdfab_factory_backup_DVDFab9_mac.BackupDVDFab9MacFactory(f12)
f12 = backup_DVDFab9_mac.f_backup_dvdfab9_mac()



#for DVDFab9 official win
import dvdfab_factory_dvdfab9_official_win
f13 = BuildFactory()
DVDFab9_official_win = dvdfab_factory_dvdfab9_official_win.DVDFab9OfficialWinFactory(f13)
f13 = DVDFab9_official_win.f_dvdfab9_official_win()

#for DVDFab9 official mac
import dvdfab_factory_dvdfab9_official_mac
f14 = BuildFactory()
DVDFab9_official_mac = dvdfab_factory_dvdfab9_official_mac.DVDFab9OfficialMacFactory(f14)
f14 = DVDFab9_official_mac.f_dvdfab9_official_mac()

#for DVDFab9 ts win rebuild
import dvdfab_factory_dvdfab9_ts_rebuild
f15 = BuildFactory()
dvdfab_ts_win_rebuild = dvdfab_factory_dvdfab9_ts_rebuild.WinDVDFabFactoryTs(f15)
f15 = dvdfab_ts_win_rebuild.f_dvdfab_branch()

#for DVDFab9 ts win release
import dvdfab_factory_dvdfab9_ts_release
f16 = BuildFactory()
dvdfab_ts_win_rebuild = dvdfab_factory_dvdfab9_ts_release.WinDVDFabFactoryTs(f16)
f16 = dvdfab_ts_win_rebuild.f_dvdfab_branch()


#for DVDFab mac 107 release
import dvdfab_factory_mac107_release
f17 = BuildFactory()
dvdfab_mac_107_release = dvdfab_factory_mac107_release.MacDVDFabFactory107(f17)
f17 = dvdfab_mac_107_release.f_dvdfab()

#for DVDFab mac 107 rebuild
import dvdfab_factory_mac107_rebuild
f18 = BuildFactory()
dvdfab_mac_107_rebuild = dvdfab_factory_mac107_rebuild.MacDVDFabFactory107(f18)
f18 = dvdfab_mac_107_rebuild.f_dvdfab()


#from 50
#for package DVDFab8
import dvdfab_factory_package_DVDFab8
f19 = BuildFactory()
package_dvdfab8 = dvdfab_factory_package_DVDFab8.PackageDVDFab8Factory(f19)
f19 = package_dvdfab8.f_package_dvdfab8()

#for all beta package
import dvdfab_factory_all_beta_package
f20 = BuildFactory()
all_beta_package = dvdfab_factory_all_beta_package.PackageDVDFab9BetaFactory(f20)
f20 = all_beta_package.f_package_dvdfab9_beta()

#for all official package
import dvdfab_factory_all_official_package
f21 = BuildFactory()
all_official_package = dvdfab_factory_all_official_package.PackageDVDFab9OfficialFactory(f21)
f21 = all_official_package.f_package_dvdfab9_official()


#for package DVDFab9 Retail
import dvdfab_factory_package_DVDFab9_retail
f22 = BuildFactory()
package_dvdfab9_retail = dvdfab_factory_package_DVDFab9_retail.PackageDVDFab9RetailFactory(f22)
f22 = package_dvdfab9_retail.f_package_dvdfab9_retail()


#for copy DVDFab9 Official Folder
import dvdfab_factory_copy_DVDFab9_official_folder
f23 = BuildFactory()
copy_dvdfab9_official_folder = dvdfab_factory_copy_DVDFab9_official_folder.CopyDVDFab9OfficialFolderFactory(f23)
f23 = copy_dvdfab9_official_folder.f_copy_dvdfab9_official_folder()

#for package DVDFab9 Addon
import dvdfab_factory_package_DVDFab9_addon
f24 = BuildFactory()
package_dvdfab9_addon = dvdfab_factory_package_DVDFab9_addon.PackageDVDFab9AddonFactory(f24)
f24 = package_dvdfab9_addon.f_package_dvdfab9_addon()

#for package DVDFab9 Official
import dvdfab_factory_official_fab_daily_build
f25 = BuildFactory()
official_fab_daily_build = dvdfab_factory_official_fab_daily_build.PackageBluFab9OfficialFactory(f25)
f25 = official_fab_daily_build.f_package_blufab9_official()

#for package mac DVDFab9 Official
import dvdfab_factory_mac_official_fab_daily_build
f26 = BuildFactory()
mac_official_fab_daily_build = dvdfab_factory_mac_official_fab_daily_build.PackageDVDFab9OfficialFactory(f26)
f26 = mac_official_fab_daily_build.f_package_dvdfab9_official()

#for package dvdfab9 beta
import dvdfab_factory_package_DVDFab9_beta
f27 = BuildFactory()
package_DVDFab9_beta = dvdfab_factory_package_DVDFab9_beta.PackageDVDFab9BetaFactory(f27)
f27 = package_DVDFab9_beta.f_package_dvdfab9_beta()

#for package dvdfab9 official
import dvdfab_factory_package_DVDFab9_official
f28 = BuildFactory()
package_DVDFab9_official = dvdfab_factory_package_DVDFab9_official.PackageDVDFab9OfficialFactory(f28)
f28 = package_DVDFab9_official.f_package_dvdfab9_official()

#for package blufab9 beta
import dvdfab_factory_package_BluFab9_beta
f29 = BuildFactory()
package_BluFab9_beta = dvdfab_factory_package_BluFab9_beta.PackageBluFab9BetaFactory(f29)
f29 = package_BluFab9_beta.f_package_blufab9_beta()

#for package blufab9 official
import dvdfab_factory_package_BluFab9_official
f30 = BuildFactory()
package_BluFab9_official = dvdfab_factory_package_BluFab9_official.PackageBluFab9OfficialFactory(f30)
f30 = package_BluFab9_official.f_package_blufab9_official()


#for package TDMore
import dvdfab_factory_package_TDMore
f31 = BuildFactory()
package_TDMore = dvdfab_factory_package_TDMore.PackageTDMoreFactory(f31)
f31 = package_TDMore.f_package_tdmore()

#for Dev TDMore Backup build
import dvdfab_factory_TDMore
f32 = BuildFactory()
Dev_TDMore_build = dvdfab_factory_TDMore.WinDevTDMoreFactory(f32)
f32 = Dev_TDMore_build.f_dev_tdmore()

#for package safedvdcopy
import dvdfab_factory_package_safedvdcopy
f33 = BuildFactory()
package_safedvdcopy = dvdfab_factory_package_safedvdcopy.PackageSafeDVDCopyFactory(f33)
f33 = package_safedvdcopy.f_package_safedvdcopy()

#for DVDFab9 ts win basement rebuild
import dvdfab_factory_dvdfab9_ts_basement_rebuild
f34 = BuildFactory()
dvdfab_ts_basement_rebuild = dvdfab_factory_dvdfab9_ts_basement_rebuild.WinDVDFabFactoryTs(f34)
f34 = dvdfab_ts_basement_rebuild.f_dvdfab_branch()


#for DVDFab mac 107 basement rebuild
import dvdfab_factory_mac107_basement_rebuild
f35 = BuildFactory()
dvdfab_mac_107_basement_rebuild = dvdfab_factory_mac107_basement_rebuild.MacDVDFabFactory107(f35)
f35 = dvdfab_mac_107_basement_rebuild.f_dvdfab()

#for package mac dvdfab9 beta
import dvdfab_factory_package_mac_dvdfab9_beta
f36 = BuildFactory()
package_mac_dvdfab9_beta = dvdfab_factory_package_mac_dvdfab9_beta.PackageMacDVDFab9BetaFactory(f36)
f36 = package_mac_dvdfab9_beta.f_package_mac_dvdfab9_beta()

#for package mac dvdfab9 official
import dvdfab_factory_package_mac_dvdfab9_official
f37 = BuildFactory()
package_mac_dvdfab9_official = dvdfab_factory_package_mac_dvdfab9_official.PackageMacDVDFab9OfficialFactory(f37)
f37 = package_mac_dvdfab9_official.f_package_mac_dvdfab9_official()

#for DVDFab daily build no compile
import dvdfab_factory_beta_fab_no_compile
f38 = BuildFactory()
beta_fab_no_compile_build = dvdfab_factory_beta_fab_no_compile.WinDVDFabFactoryNoCompile(f38)
f38 = beta_fab_no_compile_build.f_dvdfab_branch()


#for DVDFab mac daily build no compile
import dvdfab_factory_mac_beta_fab_no_compile
f39 = BuildFactory()
dvdfab_mac_no_compile = dvdfab_factory_mac_beta_fab_no_compile.MacDVDFabFactoryNoCompile(f39)
f39 = dvdfab_mac_no_compile.f_dvdfab()

#for Package Mac SafeDVDCopy
import dvdfab_factory_package_mac_safedvdcopy
f40 = BuildFactory()
package_mac_safedvdcopy_build = dvdfab_factory_package_mac_safedvdcopy.MacDVDFabFactory107(f40)
f40 = package_mac_safedvdcopy_build.f_dvdfab()

#for Package Mac SafeDVDCopy Backup
import dvdfab_factory_package_mac_safedvdcopy_backup
f41 = BuildFactory()
package_mac_safedvdcopy_backup_build = dvdfab_factory_package_mac_safedvdcopy_backup.MacDVDFabFactory107(f41)
f41 = package_mac_safedvdcopy_backup_build.f_dvdfab()

#for Package SafeDVDCopy Backup
import dvdfab_factory_package_safedvdcopy_backup
f42 = BuildFactory()
package_safedvdcopy_backup_build = dvdfab_factory_package_safedvdcopy_backup.WinDVDFabFactory(f42)
f42 = package_safedvdcopy_backup_build.f_dvdfab()


#for package TDMore DVD Copy
import dvdfab_factory_package_TDMore_DVD_Copy
f43 = BuildFactory()
package_TDMore_DVD_Copy = dvdfab_factory_package_TDMore_DVD_Copy.PackageTDMoreFactory(f43)
f43 = package_TDMore_DVD_Copy.f_package_tdmore()

#for package TDMore Free DVD Copy
import dvdfab_factory_package_TDMore_Free_DVD_Copy
f44 = BuildFactory()
package_TDMore_Free_DVD_Copy = dvdfab_factory_package_TDMore_Free_DVD_Copy.PackageTDMoreFactory(f44)
f44 = package_TDMore_Free_DVD_Copy.f_package_tdmore()

#for package TDMore DVD Copy for GOTD
import dvdfab_factory_package_TDMore_DVD_Copy_for_GOTD
f45 = BuildFactory()
package_TDMore_DVD_Copy_for_GOTD = dvdfab_factory_package_TDMore_DVD_Copy_for_GOTD.PackageTDMoreFactory(f45)
f45 = package_TDMore_DVD_Copy_for_GOTD.f_package_tdmore()

#for package TDMore DVD Converter
import dvdfab_factory_package_TDMore_DVD_Converter
f46 = BuildFactory()
package_TDMore_DVD_Converter = dvdfab_factory_package_TDMore_DVD_Converter.PackageTDMoreFactory(f46)
f46 = package_TDMore_DVD_Converter.f_package_tdmore()

#for package TDMore Bluray Copy
import dvdfab_factory_package_TDMore_Bluray_Copy
f47 = BuildFactory()
package_TDMore_Bluray_Copy = dvdfab_factory_package_TDMore_Bluray_Copy.PackageTDMoreFactory(f47)
f47 = package_TDMore_Bluray_Copy.f_package_tdmore()

#for package TDMore Bluray Converter
import dvdfab_factory_package_TDMore_Bluray_Converter
f48 = BuildFactory()
package_TDMore_Bluray_Converter = dvdfab_factory_package_TDMore_Bluray_Converter.PackageTDMoreFactory(f48)
f48 = package_TDMore_Bluray_Converter.f_package_tdmore()

#for package safedvdcopy only
import dvdfab_factory_package_safedvdcopy_only
f49 = BuildFactory()
package_safedvdcopy_only = dvdfab_factory_package_safedvdcopy_only.PackageSafeDVDCopyFactory(f49)
f49 = package_safedvdcopy_only.f_package_safedvdcopy()

#for package safedvdcopy trial
import dvdfab_factory_package_safedvdcopy_trial
f50 = BuildFactory()
package_safedvdcopy_trial = dvdfab_factory_package_safedvdcopy_trial.PackageSafeDVDCopyFactory(f50)
f50 = package_safedvdcopy_trial.f_package_safedvdcopy()

#for package safedvdcopy premium
import dvdfab_factory_package_safedvdcopy_premium
f51 = BuildFactory()
package_safedvdcopy_premium = dvdfab_factory_package_safedvdcopy_premium.PackageSafeDVDCopyFactory(f51)
f51 = package_safedvdcopy_premium.f_package_safedvdcopy()

#for package safedvdcopy premium
import dvdfab_factory_package_safedvdcopy_premium_trial
f52 = BuildFactory()
package_safedvdcopy_premium_trial = dvdfab_factory_package_safedvdcopy_premium_trial.PackageSafeDVDCopyFactory(f52)
f52 = package_safedvdcopy_premium_trial.f_package_safedvdcopy()

#for DVDFab9 official win new lib
import dvdfab_factory_dvdfab9_official_win_new_lib
f53 = BuildFactory()
DVDFab9_official_win_new_lib = dvdfab_factory_dvdfab9_official_win_new_lib.DVDFab9OfficialWinFactory(f53)
f53 = DVDFab9_official_win_new_lib.f_dvdfab9_official_win()

#for DVDFab9 official mac new lib
import dvdfab_factory_dvdfab9_official_mac_new_lib
f54 = BuildFactory()
DVDFab9_official_mac_new_lib = dvdfab_factory_dvdfab9_official_mac_new_lib.DVDFab9OfficialMacFactory(f54)
f54 = DVDFab9_official_mac_new_lib.f_dvdfab9_official_mac()

#for Package Mac SafeDVDCopy only
import dvdfab_factory_package_mac_safedvdcopy_only
f55 = BuildFactory()
package_mac_safedvdcopy_only_build = dvdfab_factory_package_mac_safedvdcopy_only.MacDVDFabFactory107(f55)
f55 = package_mac_safedvdcopy_only_build.f_dvdfab()

#for Package Mac SafeDVDCopy Trial
import dvdfab_factory_package_mac_safedvdcopy_trial
f56 = BuildFactory()
package_mac_safedvdcopy_trial_build = dvdfab_factory_package_mac_safedvdcopy_trial.MacDVDFabFactory107(f56)
f56 = package_mac_safedvdcopy_trial_build.f_dvdfab()

#for Package Mac SafeDVDCopy Premium
import dvdfab_factory_package_mac_safedvdcopy_premium
f57 = BuildFactory()
package_mac_safedvdcopy_premium_build = dvdfab_factory_package_mac_safedvdcopy_premium.MacDVDFabFactory107(f57)
f57 = package_mac_safedvdcopy_premium_build.f_dvdfab()

#for Package Mac SafeDVDCopy Trial
import dvdfab_factory_package_mac_safedvdcopy_premium_trial
f58 = BuildFactory()
package_mac_safedvdcopy_premium_trial_build = dvdfab_factory_package_mac_safedvdcopy_premium_trial.MacDVDFabFactory107(f58)
f58 = package_mac_safedvdcopy_premium_trial_build.f_dvdfab()

#for Package Mac SafeDVDCopy Backup Only
import dvdfab_factory_package_mac_safedvdcopy_backup_only
f59 = BuildFactory()
package_mac_safedvdcopy_backup_only_build = dvdfab_factory_package_mac_safedvdcopy_backup_only.MacDVDFabFactory107(f59)
f59 = package_mac_safedvdcopy_backup_only_build.f_dvdfab()

#for Package Mac SafeDVDCopy Backup Trial
import dvdfab_factory_package_mac_safedvdcopy_backup_trial
f60 = BuildFactory()
package_mac_safedvdcopy_backup_trial_build = dvdfab_factory_package_mac_safedvdcopy_backup_trial.MacDVDFabFactory107(f60)
f60 = package_mac_safedvdcopy_backup_trial_build.f_dvdfab()

#for Package Mac SafeDVDCopy Backup Premium
import dvdfab_factory_package_mac_safedvdcopy_backup_premium
f61 = BuildFactory()
package_mac_safedvdcopy_backup_premium_build = dvdfab_factory_package_mac_safedvdcopy_backup_premium.MacDVDFabFactory107(f61)
f61 = package_mac_safedvdcopy_backup_premium_build.f_dvdfab()

#for Package Mac SafeDVDCopy Backup Premium Trial
import dvdfab_factory_package_mac_safedvdcopy_backup_premium_trial
f62 = BuildFactory()
package_mac_safedvdcopy_backup_premium_trial_build = dvdfab_factory_package_mac_safedvdcopy_backup_premium_trial.MacDVDFabFactory107(f62)
f62 = package_mac_safedvdcopy_backup_premium_trial_build.f_dvdfab()

#DVDFab9 Basement Merge
import dvdfab_factory_dvdfab9_basement_merge
f63 = BuildFactory()
DVDFab9_basement_merge_build = dvdfab_factory_dvdfab9_basement_merge.WinDVDFabFactoryDev(f63)
f63 = DVDFab9_basement_merge_build.f_dvdfab_branch()

#DVDFab9 Basement Merge rebuild
import dvdfab_factory_dvdfab9_basement_merge_rebuild
f64 = BuildFactory()
DVDFab9_basement_merge_rebuild = dvdfab_factory_dvdfab9_basement_merge_rebuild.WinDVDFabFactoryDev(f64)
f64 = DVDFab9_basement_merge_rebuild.f_dvdfab_branch()

#for package TDMore DVD Converter for GOTD
import dvdfab_factory_package_TDMore_DVD_Converter_for_GOTD
f65 = BuildFactory()
package_TDMore_DVD_Converter_for_GOTD = dvdfab_factory_package_TDMore_DVD_Converter_for_GOTD.PackageTDMoreFactory(f65)
f65 = package_TDMore_DVD_Converter_for_GOTD.f_package_tdmore()


#for package TDMore Bluray Converter Share Version
import dvdfab_factory_package_TDMore_Bluray_Converter_Share_Version
f66 = BuildFactory()
package_TDMore_Bluray_Converter_Share_Version = dvdfab_factory_package_TDMore_Bluray_Converter_Share_Version.PackageTDMoreFactory(f66)
f66 = package_TDMore_Bluray_Converter_Share_Version.f_package_tdmore()

#for package TDMore to AVI DVD Converter
import dvdfab_factory_package_TDMore_DVD_to_AVI_Converter
f67 = BuildFactory()
package_TDMore_DVD_to_AVI_Converter = dvdfab_factory_package_TDMore_DVD_to_AVI_Converter.PackageTDMoreFactory(f67)
f67 = package_TDMore_DVD_to_AVI_Converter.f_package_tdmore()

#for tdmore win release
import dvdfab_factory_tdmore_release
f68 = BuildFactory()
tdmore_build = dvdfab_factory_tdmore_release.WinDVDFabFactoryTs(f68)
f68 = tdmore_build.f_dvdfab_branch()

#for tdmore no compile
import dvdfab_factory_tdmore_no_compile
f69 = BuildFactory()
tdmore_no_compile_build = dvdfab_factory_tdmore_no_compile.WinDVDFabFactoryNoCompile(f69)
f69 = tdmore_no_compile_build.f_dvdfab_branch()

#for safedvdcopy win release
import dvdfab_factory_safedvdcopy_release
f70 = BuildFactory()
safedvdcopy_build = dvdfab_factory_safedvdcopy_release.WinDVDFabFactoryTs(f70)
f70 = safedvdcopy_build.f_dvdfab_branch()

#for safedvdcopy no compile
import dvdfab_factory_safedvdcopy_no_compile
f71 = BuildFactory()
safedvdcopy_no_compile_build = dvdfab_factory_safedvdcopy_no_compile.WinDVDFabFactoryNoCompile(f71)
f71 = safedvdcopy_no_compile_build.f_dvdfab_branch()

#for vidonme release
import dvdfab_factory_vidonme_release
f72 = BuildFactory()
vidonme_build = dvdfab_factory_vidonme_release.WinDVDFabFactoryTs(f72)
f72 = vidonme_build.f_dvdfab_branch()

#for vidonme no compile
import dvdfab_factory_vidonme_no_compile
f73 = BuildFactory()
vidonme_no_compile_build = dvdfab_factory_vidonme_no_compile.WinDVDFabFactoryNoCompile(f73)
f73 = vidonme_no_compile_build.f_dvdfab_branch()

#for package VidOnme
import dvdfab_factory_package_VidOnme
f74 = BuildFactory()
package_VidOnme = dvdfab_factory_package_VidOnme.PackageVidOnmeFactory(f74)
f74 = package_VidOnme.f_package_vidonme()

#for mac VidOnme release
import dvdfab_factory_mac_vidonme_release
f75 = BuildFactory()
mac_vidonme_release = dvdfab_factory_mac_vidonme_release.MacDVDFabFactory107(f75)
f75 = mac_vidonme_release.f_dvdfab()

#for mac VidOnme no compile
import dvdfab_factory_mac_vidonme_no_compile
f76 = BuildFactory()
mac_vidonme_no_compile = dvdfab_factory_mac_vidonme_no_compile.MacDVDFabFactoryNoCompile(f76)
f76 = mac_vidonme_no_compile.f_dvdfab()

#for package mac vidonme
import dvdfab_factory_package_mac_vidonme
f77 = BuildFactory()
package_mac_vidonme = dvdfab_factory_package_mac_vidonme.PackageMacVidOnmeFactory(f77)
f77 = package_mac_vidonme.f_package_mac_vidonme()

#for mac safedvdcopy release
import dvdfab_factory_mac_safedvdcopy_release
f78 = BuildFactory()
mac_safedvdcopy_release = dvdfab_factory_mac_safedvdcopy_release.MacDVDFabFactory107(f78)
f78 = mac_safedvdcopy_release.f_dvdfab()

#for Mac SafeDVDCopy Backup
import dvdfab_factory_mac_safedvdcopy_backup
f79 = BuildFactory()
mac_safedvdcopy_backup_build = dvdfab_factory_mac_safedvdcopy_backup.DVDFab9OfficialMacFactory(f79)
f79 = mac_safedvdcopy_backup_build.f_dvdfab9_official_mac()

#for Win SafeDVDCopy Backup
import dvdfab_factory_safedvdcopy_backup
f80 = BuildFactory()
win_safedvdcopy_backup_build = dvdfab_factory_safedvdcopy_backup.DVDFab9OfficialWinFactory(f80)
f80 = win_safedvdcopy_backup_build.f_dvdfab9_official_win()

#for package TDMore Video Converter
import dvdfab_factory_package_TDMore_Video_Converter
f81 = BuildFactory()
package_TDMore_Video_Converter = dvdfab_factory_package_TDMore_Video_Converter.PackageTDMoreFactory(f81)
f81 = package_TDMore_Video_Converter.f_package_tdmore()

#for restore tdmore
import dvdfab_factory_restore_TDMore
f82 = BuildFactory()
restore_TDMore = dvdfab_factory_restore_TDMore.RestoreTDMoreFactory(f82)
f82 = restore_TDMore.f_restore_tdmore()

#for restore win vidonme
import dvdfab_factory_restore_Win_VidOn_Video_Toolkit
f83 = BuildFactory()
restore_Win_VidOn_Video_Toolkit = dvdfab_factory_restore_Win_VidOn_Video_Toolkit.RestoreWinVidOnVideoToolkitFactory(f83)
f83 = restore_Win_VidOn_Video_Toolkit.f_restore_win_vidon_video_toolkit()

#for restore mac vidonme
import dvdfab_factory_restore_Mac_VidOn_Video_Toolkit
f84 = BuildFactory()
restore_Mac_VidOn_Video_Toolkit = dvdfab_factory_restore_Mac_VidOn_Video_Toolkit.RestoreMacVidOnVideoToolkitFactory(f84)
f84 = restore_Mac_VidOn_Video_Toolkit.f_restore_mac_vidon_video_toolkit()

#for TDMore Backup
import dvdfab_factory_tdmore_backup
f85 = BuildFactory()
tdmore_backup_build = dvdfab_factory_tdmore_backup.TDMoreBackupFactory(f85)
f85 = tdmore_backup_build.f_tdmore_backup()

#for Win VidOn Video Toolkit Backup
import dvdfab_factory_win_vidonme_backup
f86 = BuildFactory()
vidonme_backup_build = dvdfab_factory_win_vidonme_backup.WinVidOnmeBackupFactory(f86)
f86 = vidonme_backup_build.f_vidonme_backup()

#for Mac VidOn Video Toolkit Backup
import dvdfab_factory_mac_vidonme_backup
f87 = BuildFactory()
mac_vidonme_backup_build = dvdfab_factory_mac_vidonme_backup.MacVidOnmeBackupFactory(f87)
f87 = mac_vidonme_backup_build.f_vidonme_backup()

#for  Backup DVDFab_stable_trunk
import dvdfab_factory_backup_DVDFab_stable_trunk
f88 = BuildFactory()
backup_DVDFab_stable_trunk_build = dvdfab_factory_backup_DVDFab_stable_trunk.BackupDVDFabstabletrunkFactory(f88)
f88 = backup_DVDFab_stable_trunk_build.f_backup_dvdfab()

#for TDMore Backup no compile
import dvdfab_factory_tdmore_backup_no_compile
f89 = BuildFactory()
tdmore_backup_no_compile_build = dvdfab_factory_tdmore_backup_no_compile.TDMoreBackupFactory(f89)
f89 = tdmore_backup_no_compile_build.f_tdmore_backup()

#for Win VidOn Video Toolkit Backup no compile
import dvdfab_factory_win_vidonme_backup_no_compile
f90 = BuildFactory()
vidonme_backup_build_no_compile = dvdfab_factory_win_vidonme_backup_no_compile.WinVidOnmeBackupFactory(f90)
f90 = vidonme_backup_build_no_compile.f_vidonme_backup()

#for Mac VidOn Video Toolkit Backup no compile
import dvdfab_factory_mac_vidonme_backup_no_compile
f91 = BuildFactory()
mac_vidonme_backup_build_no_compile = dvdfab_factory_mac_vidonme_backup_no_compile.MacVidOnmeBackupFactory(f91)
f91 = mac_vidonme_backup_build_no_compile.f_vidonme_backup()

#for restore TDMore package Folder
import dvdfab_factory_restore_tdmore_package_folder
f92 = BuildFactory()
restore_tdmore_package_folder_build = dvdfab_factory_restore_tdmore_package_folder.CopyDVDFab9OfficialFolderFactory(f92)
f92 = restore_tdmore_package_folder_build.f_copy_dvdfab9_official_folder()

#for restore Win VidOnme package Folder
import dvdfab_factory_restore_win_vidonme_package_folder
f93 = BuildFactory()
restore_win_vidonme_package_folder_build = dvdfab_factory_restore_win_vidonme_package_folder.CopyDVDFab9OfficialFolderFactory(f93)
f93 = restore_win_vidonme_package_folder_build.f_copy_dvdfab9_official_folder()

#for package TDMore backup
import dvdfab_factory_package_TDMore_backup
f94 = BuildFactory()
package_TDMore_backup = dvdfab_factory_package_TDMore_backup.PackageTDMoreFactory(f94)
f94 = package_TDMore_backup.f_package_tdmore()

#for package VidOnme backup
import dvdfab_factory_package_VidOnme_backup
f95 = BuildFactory()
package_vidonme_backup = dvdfab_factory_package_VidOnme_backup.PackageVidOnmeFactory(f95)
f95 = package_vidonme_backup.f_package_vidonme()

#for mac safedvdcopy no compile
import dvdfab_factory_mac_safedvdcopy_no_compile
f96 = BuildFactory()
mac_safedvdcopy_no_compile = dvdfab_factory_mac_safedvdcopy_no_compile.MacDVDFabFactory107(f96)
f96 = mac_safedvdcopy_no_compile.f_dvdfab()

#for restore win safedvdcopy
import dvdfab_factory_restore_Win_SafeDVDCopy
f97 = BuildFactory()
restore_Win_SafeDVDCopy = dvdfab_factory_restore_Win_SafeDVDCopy.RestoreWinSafeDVDCopyFactory(f97)
f97 = restore_Win_SafeDVDCopy.f_restore_win_safedvdcopy()

#for restore SafeDVDCopy package Folder
import dvdfab_factory_restore_safedvdcopy_package_folder
f98 = BuildFactory()
restore_safedvdcopy_package_folder_build = dvdfab_factory_restore_safedvdcopy_package_folder.CopyDVDFab9OfficialFolderFactory(f98)
f98 = restore_safedvdcopy_package_folder_build.f_copy_dvdfab9_official_folder()

#for restore mac safedvdcopy
import dvdfab_factory_restore_Mac_SafeDVDCopy
f99 = BuildFactory()
restore_Mac_SafeDVDCopy = dvdfab_factory_restore_Mac_SafeDVDCopy.RestoreMacSafeDVDCopyFactory(f99)
f99 = restore_Mac_SafeDVDCopy.f_restore_mac_safedvdcopy()



#************************* 30 daily build*******************************
#for tdmore win release 30
import dvdfab_factory_tdmore_release_30
f100 = BuildFactory()
tdmore_30_build = dvdfab_factory_tdmore_release_30.WinDVDFabFactoryTs(f100)
f100 = tdmore_30_build.f_dvdfab_branch()

#for tdmore win release rebuild 30
import dvdfab_factory_tdmore_rebuild_30
f101 = BuildFactory()
tdmore_30_rebuild = dvdfab_factory_tdmore_rebuild_30.WinDVDFabFactoryTs(f101)
f101 = tdmore_30_rebuild.f_dvdfab_branch()


#for vidonme release 30
import dvdfab_factory_vidonme_release_30
f102 = BuildFactory()
vidonme_30_build = dvdfab_factory_vidonme_release_30.WinDVDFabFactoryTs(f102)
f102 = vidonme_30_build.f_dvdfab_branch()

#for vidonme release rebuild 30
import dvdfab_factory_vidonme_rebuild_30
f103 = BuildFactory()
vidonme_30_rebuild = dvdfab_factory_vidonme_rebuild_30.WinDVDFabFactoryTs(f103)
f103 = vidonme_30_rebuild.f_dvdfab_branch()

#for safedvdcopy release 30
import dvdfab_factory_safedvdcopy_release_30
f104 = BuildFactory()
safedvdcopy_30_build = dvdfab_factory_safedvdcopy_release_30.WinDVDFabFactoryTs(f104)
f104 = safedvdcopy_30_build.f_dvdfab_branch()

#for safedvdcopy rebuild 30
import dvdfab_factory_safedvdcopy_rebuild_30
f105 = BuildFactory()
safedvdcopy_30_rebuild = dvdfab_factory_safedvdcopy_rebuild_30.WinDVDFabFactoryTs(f105)
f105 = safedvdcopy_30_rebuild.f_dvdfab_branch()

#for sign VideoDownloader Browser
import dvdfab_factory_sign_videodownloader_browser
f106 = BuildFactory()
build_sign_videodownloader_browser = dvdfab_factory_sign_videodownloader_browser.SignVideoDownloaderBrowserFactory(f106)
f106 = build_sign_videodownloader_browser.f_sign()

#for package TDMore Bluray Copy Share Version
import dvdfab_factory_package_TDMore_Bluray_Copy_Share_Version
f107 = BuildFactory()
package_TDMore_Bluray_Copy_Share_Version = dvdfab_factory_package_TDMore_Bluray_Copy_Share_Version.PackageTDMoreFactory(f107)
f107 = package_TDMore_Bluray_Copy_Share_Version.f_package_tdmore()

#for package DVDFab Retail Japan
import dvdfab_factory_package_dvdfab_retail_japan
f108 = BuildFactory()
package_dvdfab_retail_japan_build = dvdfab_factory_package_dvdfab_retail_japan.PackageDVDFabRetailJapanFactory(f108)
f108 = package_dvdfab_retail_japan_build.f_package_dvdfab()

#for DVDFab retail japan release
import dvdfab_factory_retail_japan_release
f109 = BuildFactory()
dvdfab_retail_japan_build = dvdfab_factory_retail_japan_release.WinDVDFabFactoryTs(f109)
f109 = dvdfab_retail_japan_build.f_dvdfab_branch()


#for DVDFab mac dvdfab retail japan release
import dvdfab_factory_mac_retail_japan_release
f110 = BuildFactory()
mac_dvdfab_retail_japan_release = dvdfab_factory_mac_retail_japan_release.MacDVDFabFactory107(f110)
f110 = mac_dvdfab_retail_japan_release.f_dvdfab()

################################# BUILDERS  #################################

db_lock_50 = locks.MasterLock("database_50")
db_lock_93 = locks.MasterLock("database_93")
db_lock_168 = locks.MasterLock("database_168")
db_lock_201 = locks.MasterLock("database_201")
db_lock_30 = locks.MasterLock("database_30")
db_lock = locks.MasterLock("database")
db_lock_mac_mini = locks.MasterLock("database_mac_mini")
build_lock = locks.SlaveLock("slave_builds",
                             maxCount = 6,
                             maxCountForSlave = {"DVDFab9_dev":6,"DVDFab9_mac_mini":6})

c['builders'] = []
b1_dev_build_dir = "trunk"

b1 = {
	'name' : 'DVDFab9_dev_builder',
	'slavename' : 'DVDFab9_dev',
	'builddir' : b1_dev_build_dir,
    'slavebuilddir':b1_dev_build_dir,
    'locks':[db_lock.access('exclusive')],
	'factory' : f1}
    
b5_dev_rebuild_dir = "trunk_rebuild"

b5 = {
	'name' : 'DVDFab9_dev_rebuild',
	'slavename' : 'DVDFab9_dev',
	'builddir' : b5_dev_rebuild_dir,
    'slavebuilddir':b1_dev_build_dir,
    'locks':[db_lock.access('exclusive')],
	'factory' : f5}

    
b2_Macmini_dir = "branch"
b2 = {
		'name' : 'DVDFab9_mac_mini',
		'slavename' : 'DVDFab9_mini',
		'builddir' : b2_Macmini_dir,
        'slavebuilddir':b2_Macmini_dir,
        'locks':[db_lock_mac_mini.access('exclusive')],
		'factory' : f2}	    
    
b6_Macmini_rebuild_dir = "branch_rebuild"
b6 = {
		'name' : 'DVDFab9_mac_mini_rebuild',
		'slavename' : 'DVDFab9_mini',
		'builddir' : b6_Macmini_rebuild_dir,
        'slavebuilddir':b2_Macmini_dir,
        'locks':[db_lock_mac_mini.access('exclusive')],
		'factory' : f6}	    

b3_mobile2_unittest_dir = "trunk_mobile2_unittest"

b3 = {
	'name' : 'DVDFab9_mobile2_unittest',
	'slavename' : 'DVDFab9_mobile2_unittest',
	'builddir' : b3_mobile2_unittest_dir,
	'factory' : f3}

	
b7_build_dir = "stable_trunk"
b7 = {
	'name' : 'win_stable_trunk',
	'slavename' : 'DVDFab',
	'builddir' : b7_build_dir,
    'locks':[db_lock_201.access('exclusive')],
	'factory' : f7}
	
b8_Mac107_dir = "trunk_201"
b8 = {
		'name' : 'mac_107',
		'slavename' : 'DVDFab_Mac_107',
		'builddir' : b8_Mac107_dir,
        'slavebuilddir': b8_Mac107_dir,
        'locks':[db_lock_93.access('exclusive')],
		'factory' : f8}	
		
		
b9_fab9ts_dir = "branch_201"
b9 = {
		'name' : 'dvdfab9_ts',
		'slavename' : 'DVDFab9_ts_win',
		'builddir' : b9_fab9ts_dir,
		'slavebuilddir' : b9_fab9ts_dir,
        'locks':[db_lock_168.access('exclusive')],
		'factory' : f9}	
		
b10_fab9_168_dir = "branch_mobile2_201"
b10 = {
		'name' : 'dvdfab9_win',
		'slavename' : 'DVDFab9_Win_168',
		'builddir' : b10_fab9_168_dir,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f10}	

b11_backup_dvdfab9_win = "backup_dvdfab9_win_201"
b11 = {
		'name' : 'backup_dvdfab9_win',
		'slavename' : 'Backup_DVDFab9_Win',
		'builddir' : b11_backup_dvdfab9_win,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f11}	

b12_backup_dvdfab9_mac = "backup_dvdfab9_mac_201"
b12 = {
		'name' : 'backup_dvdfab9_mac',
		'slavename' : 'Backup_DVDFab9_Mac',
		'builddir' : b12_backup_dvdfab9_mac,
        'locks':[db_lock_93.access('exclusive')],
		'factory' : f12}

b13_dvdfab9_official_win = "dvdfab9_official_win_201"
b13 = {
		'name' : 'dvdfab9_official_win',
		'slavename' : 'DVDFab9_Official_Win',
		'builddir' : b13_dvdfab9_official_win,
                'slavebuilddir':b13_dvdfab9_official_win,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f13}	

b14_dvdfab9_official_mac = "dvdfab9_official_mac_201"
b14 = {
		'name' : 'dvdfab9_official_mac',
		'slavename' : 'DVDFab9_Official_Mac',
		'builddir' : b14_dvdfab9_official_mac,
                'slavebuilddir':b14_dvdfab9_official_mac,
		'locks':[db_lock_93.access('exclusive')],
		'factory' : f14}


b15_fab9ts_dir = "branch_rebuild_201"
b15 = {
		'name' : 'dvdfab9_ts_rebuild',
		'slavename' : 'DVDFab9_ts_win',
		'builddir' : b15_fab9ts_dir,
		'slavebuilddir' : b9_fab9ts_dir,
        'locks':[db_lock_168.access('exclusive')],
        'factory' : f15}	
		
b16_fab9ts_dir = "branch_release_201"
b16 = {
		'name' : 'dvdfab9_ts_release',
		'slavename' : 'DVDFab9_ts_win',
		'builddir' : b16_fab9ts_dir,
		'slavebuilddir' : b9_fab9ts_dir,
        'locks':[db_lock_168.access('exclusive')],
		'factory' : f16}
		
		
b17_Mac107_dir = "Fab9_mac_release_201"
b17 = {
		'name' : 'mac_107_release',
		'slavename' : 'DVDFab_Mac_107',
		'builddir' : b17_Mac107_dir,
        'slavebuilddir': b8_Mac107_dir,
        'locks':[db_lock_93.access('exclusive')],
		'factory' : f17}

b18_Mac107_dir = "Fab9_mac_rebuild_201"
b18 = {
		'name' : 'mac_107_rebuild',
		'slavename' : 'DVDFab_Mac_107',
		'builddir' : b18_Mac107_dir,
        'slavebuilddir': b8_Mac107_dir,
        'locks':[db_lock_93.access('exclusive')],
		'factory' : f18}

	
b19_package_dvdfab8 = "package_dvdfab8"
b19 = {
		'name' : 'package_dvdfab8',
		'slavename' : 'Package_DVDFab8',
		'builddir' : b19_package_dvdfab8,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f19}	

b20_all_beta_package = "all_beta_package"
b20 = {
		'name' : 'all_beta_package',
		'slavename' : 'All_Beta_Package',
		'builddir' : b20_all_beta_package,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f20}	

b21_all_official_package = "all_official_package"
b21 = {
		'name' : 'all_official_package',
		'slavename' : 'All_Official_Package',
		'builddir' : b21_all_official_package,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f21}		
	
	
b22_package_dvdfab9_retail = "package_dvdfab9_retail"
b22 = {
		'name' : 'package_dvdfab9_retail',
		'slavename' : 'Package_DVDFab9_Retail',
		'builddir' : b22_package_dvdfab9_retail,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f22}	
		
b23_copy_dvdfab9_official_folder = "copy_dvdfab9_official_folder"
b23 = {
		'name' : 'package_copy_dvdfab9_official_folder',
		'slavename' : 'copy_DVDFab9_Official_Folder',
		'builddir' : b23_copy_dvdfab9_official_folder,
		'slavebuilddir' : b23_copy_dvdfab9_official_folder,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f23}	

	
b24_package_dvdfab9_addon = "package_dvdfab9_addon"
b24 = {
		'name' : 'package_dvdfab9_addon',
		'slavename' : 'Package_DVDFab9_Addon',
		'builddir' : b24_package_dvdfab9_addon,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f24}	


b25_official_fab_daily_build = "official_fab_daily_build"
b25 = {
		'name' : 'official_fab_daily_build',
		'slavename' : 'Official_Fab_Daily_Build',
		'builddir' : b25_official_fab_daily_build,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f25}		
	
b26_mac_official_fab_daily_build = "mac_official_fab_daily_build"
b26 = {
		'name' : 'mac_official_fab_daily_build',
		'slavename' : 'Mac_Official_Fab_Daily_Build',
		'builddir' : b26_mac_official_fab_daily_build,
		'locks':[db_lock_93.access('exclusive')],
		'factory' : f26}		
	


b27_package_dvdfab9_beta = "package_dvdfab9_beta"
b27 = {
		'name' : 'package_dvdfab9_beta',
		'slavename' : 'Package_DVDFab9_Beta',
		'builddir' : b27_package_dvdfab9_beta,
		'slavebuilddir' : b27_package_dvdfab9_beta,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f27}	

b28_package_dvdfab9_official = "package_dvdfab9_official"
b28 = {
		'name' : 'package_dvdfab9_official',
		'slavename' : 'Package_DVDFab9_Official',
		'builddir' : b28_package_dvdfab9_official,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f28}		

b29_package_blufab9_beta = "package_blufab9_beta"
b29 = {
		'name' : 'package_blufab9_beta',
		'slavename' : 'Package_BluFab9_Beta',
		'builddir' : b29_package_blufab9_beta,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f29}	

b30_package_blufab9_official = "package_blufab9_official"
b30 = {
		'name' : 'package_blufab9_official',
		'slavename' : 'Package_BluFab9_Official',
		'builddir' : b30_package_blufab9_official,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f30}
		
b31_package_tdmore = "package_tdmore"
b31 = {
		'name' : 'package_tdmore',
		'slavename' : 'Package_TDMore',
		'builddir' : b31_package_tdmore,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f31}		

b32_Dev_tdmore_build = "dev_tdmore_build"
b32 = {
		'name' : 'Dev_tdmore_builder',
		'slavename' : 'Dev_TDMore',
		'builddir' : b32_Dev_tdmore_build,
		'locks':[db_lock_30.access('exclusive')],
		'factory' : f32}		

b33_package_safedvdcopy = "package_safedvdcopy"
b33 = {
		'name' : 'package_safedvdcopy',
		'slavename' : 'Package_SafeDVDCopy',
		'builddir' : b33_package_safedvdcopy,
		'slavebuilddir' : b33_package_safedvdcopy,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f33}	


			
b34_fab9ts_dir = "win_basement_rebuild_201"
b34 = {
		'name' : 'dvdfab9_ts_basement_rebuild',
		'slavename' : 'DVDFab9_ts_win',
		'builddir' : b34_fab9ts_dir,
		'slavebuilddir' : b34_fab9ts_dir,
        'locks':[db_lock_168.access('exclusive')],
		'factory' : f34}	


b35_Mac107_dir = "mac_basement_rebuild_201"
b35 = {
		'name' : 'mac_107_basement_rebuild',
		'slavename' : 'DVDFab_Mac_107',
		'builddir' : b35_Mac107_dir,
        'slavebuilddir': b35_Mac107_dir,
        'locks':[db_lock_93.access('exclusive')],
		'factory' : f35}	

b36_package_mac_dvdfab9_beta = "package_mac_dvdfab9_beta"
b36 = {
		'name' : 'package_mac_dvdfab9_beta',
		'slavename' : 'Package_Mac_DVDFab9_Beta',
		'builddir' : b36_package_mac_dvdfab9_beta,
		'locks':[db_lock_93.access('exclusive')],
                'factory' : f36}

b37_package_mac_dvdfab9_official = "package_mac_dvdfab9_official"
b37 = {
		'name' : 'package_mac_dvdfab9_official',
		'slavename' : 'Package_Mac_DVDFab9_Official',
		'builddir' : b37_package_mac_dvdfab9_official,
		'locks':[db_lock_93.access('exclusive')],
		'factory' : f37}
	
b38_fab9ts_dir = "branch_no_compile_201"
b38 = {
		'name' : 'beta_fab_no_compile',
		'slavename' : 'Beta_Fab_No_Compile',
		'builddir' : b38_fab9ts_dir,
		'slavebuilddir' : b38_fab9ts_dir,
                'locks':[db_lock_168.access('exclusive')],
		'factory' : f38}	

b39_Mac107_dir = "trunk_no_compile_201"
b39 = {
		'name' : 'mac_beta_fab_no_compile',
		'slavename' : 'Mac_Beta_Fab_No_Compile',
		'builddir' : b39_Mac107_dir,
		'slavebuilddir' : b39_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f39}	

b40_Mac107_dir = "mac_package_safedvdcopy"
b40 = {
		'name' : 'package_mac_safedvdcopy',
		'slavename' : 'Package_Mac_SafeDVDCopy',
		'builddir' : b40_Mac107_dir,
		'slavebuilddir' : b40_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f40}

b41_Mac107_dir = "mac_package_safedvdcopy_backup"
b41 = {
		'name' : 'package_mac_safedvdcopy_backup',
		'slavename' : 'Package_Mac_SafeDVDCopy_Backup',
		'builddir' : b41_Mac107_dir,
		'slavebuilddir' : b41_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f41}


b42_Win50_dir = "package_safedvdcopy_backup"
b42 = {
		'name' : 'package_safedvdcopy_backup',
		'slavename' : 'Package_SafeDVDCopy_Backup',
		'builddir' : b42_Win50_dir,
                'locks':[db_lock_50.access('exclusive')],
		'factory' : f42}

b43_package_tdmore_dvd_copy = "package_tdmore_dvd_copy"
b43 = {
		'name' : 'package_tdmore_dvd_copy',
		'slavename' : 'Package_TDMore',
		'builddir' : b43_package_tdmore_dvd_copy,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f43}		

b44_package_tdmore_free_dvd_copy = "package_tdmore_free_dvd_copy"
b44 = {
		'name' : 'package_tdmore_free_dvd_copy',
		'slavename' : 'Package_TDMore',
		'builddir' : b44_package_tdmore_free_dvd_copy,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f44}		

b45_package_tdmore_dvd_copy_for_gotd = "package_tdmore_dvd_copy_for_gotd"
b45 = {
		'name' : 'package_tdmore_dvd_copy_for_gotd',
		'slavename' : 'Package_TDMore',
		'builddir' : b45_package_tdmore_dvd_copy_for_gotd,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f45}		

b46_package_tdmore_dvd_converter = "package_tdmore_dvd_converter"
b46 = {
		'name' : 'package_tdmore_dvd_converter',
		'slavename' : 'Package_TDMore',
		'builddir' : b46_package_tdmore_dvd_converter,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f46}		

b47_package_tdmore_bluray_copy = "package_tdmore_bluray_copy"
b47 = {
		'name' : 'package_tdmore_bluray_copy',
		'slavename' : 'Package_TDMore',
		'builddir' : b47_package_tdmore_bluray_copy,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f47}		

b48_package_tdmore_bluray_converter = "package_tdmore_bluray_converter"
b48 = {
		'name' : 'package_tdmore_bluray_converter',
		'slavename' : 'Package_TDMore',
		'builddir' : b48_package_tdmore_bluray_converter,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f48}		


b49_package_safedvdcopy_only = "package_safedvdcopy_only"
b49 = {
		'name' : 'package_safedvdcopy_only',
		'slavename' : 'Package_SafeDVDCopy',
		'builddir' : b49_package_safedvdcopy_only,
		'slavebuilddir' : b33_package_safedvdcopy,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f49}	

b50_package_safedvdcopy_trial = "package_safedvdcopy_trial"
b50 = {
		'name' : 'package_safedvdcopy_trial',
		'slavename' : 'Package_SafeDVDCopy',
		'builddir' : b50_package_safedvdcopy_trial,
		'slavebuilddir' : b33_package_safedvdcopy,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f50}	

b51_package_safedvdcopy_premium = "package_safedvdcopy_premium"
b51 = {
		'name' : 'package_safedvdcopy_premium',
		'slavename' : 'Package_SafeDVDCopy',
		'builddir' : b51_package_safedvdcopy_premium,
		'slavebuilddir' : b33_package_safedvdcopy,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f51}	

b52_package_safedvdcopy_premium_trial = "package_safedvdcopy_premium_trial"
b52 = {
		'name' : 'package_safedvdcopy_premium_trial',
		'slavename' : 'Package_SafeDVDCopy',
		'builddir' : b52_package_safedvdcopy_premium_trial,
		'slavebuilddir' : b33_package_safedvdcopy,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f52}	

b53_dvdfab9_official_win = "dvdfab9_official_win_new_lib_201"
b53 = {
		'name' : 'dvdfab9_official_win_new_lib',
		'slavename' : 'DVDFab9_Official_Win',
		'builddir' : b53_dvdfab9_official_win,
                'slavebuilddir':b13_dvdfab9_official_win,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f53}	

b54_dvdfab9_official_mac = "dvdfab9_official_mac_new_lib_201"
b54 = {
		'name' : 'dvdfab9_official_mac_new_lib',
		'slavename' : 'DVDFab9_Official_Mac',
		'builddir' : b54_dvdfab9_official_mac,
                'slavebuilddir':b14_dvdfab9_official_mac,
		'locks':[db_lock_93.access('exclusive')],
		'factory' : f54}

b55_Mac107_dir = "mac_package_safedvdcopy_only"
b55 = {
		'name' : 'package_mac_safedvdcopy_only',
		'slavename' : 'Package_Mac_SafeDVDCopy',
		'builddir' : b55_Mac107_dir,
		'slavebuilddir' : b40_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f55}

b56_Mac107_dir = "mac_package_safedvdcopy_trial"
b56 = {
		'name' : 'package_mac_safedvdcopy_trial',
		'slavename' : 'Package_Mac_SafeDVDCopy',
		'builddir' : b56_Mac107_dir,
		'slavebuilddir' : b40_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f56}

b57_Mac107_dir = "mac_package_safedvdcopy_premium"
b57 = {
		'name' : 'package_mac_safedvdcopy_premium',
		'slavename' : 'Package_Mac_SafeDVDCopy',
		'builddir' : b57_Mac107_dir,
		'slavebuilddir' : b40_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f57}

b58_Mac107_dir = "mac_package_safedvdcopy_premium_trial"
b58 = {
		'name' : 'package_mac_safedvdcopy_premium_trial',
		'slavename' : 'Package_Mac_SafeDVDCopy',
		'builddir' : b58_Mac107_dir,
		'slavebuilddir' : b40_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f58}


b59_Mac107_dir = "mac_package_safedvdcopy_backup_only"
b59 = {
		'name' : 'package_mac_safedvdcopy_backup_only',
		'slavename' : 'Package_Mac_SafeDVDCopy_Backup',
		'builddir' : b59_Mac107_dir,
		'slavebuilddir' : b41_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f59}


b60_Mac107_dir = "mac_package_safedvdcopy_backup_trial"
b60 = {
		'name' : 'package_mac_safedvdcopy_backup_trial',
		'slavename' : 'Package_Mac_SafeDVDCopy_Backup',
		'builddir' : b60_Mac107_dir,
		'slavebuilddir' : b41_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f60}

b61_Mac107_dir = "mac_package_safedvdcopy_backup_premium"
b61 = {
		'name' : 'package_mac_safedvdcopy_backup_premium',
		'slavename' : 'Package_Mac_SafeDVDCopy_Backup',
		'builddir' : b61_Mac107_dir,
		'slavebuilddir' : b41_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f61}

b62_Mac107_dir = "mac_package_safedvdcopy_backup_premium_trial"
b62 = {
		'name' : 'package_mac_safedvdcopy_backup_premium_trial',
		'slavename' : 'Package_Mac_SafeDVDCopy_Backup',
		'builddir' : b62_Mac107_dir,
		'slavebuilddir' : b41_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f62}

b63_dev_build_dir = "trunk_merge"

b63 = {
	'name' : 'DVDFab9_basement_merge',
	'slavename' : 'DVDFab9_Basement_Merge',
	'builddir' : b63_dev_build_dir,
        'slavebuilddir':b63_dev_build_dir,
        'locks':[db_lock.access('exclusive')],
	'factory' : f63}

b64_dev_build_dir = "trunk_merge_rebuild"

b64 = {
	'name' : 'DVDFab9_basement_merge_rebuild',
	'slavename' : 'DVDFab9_Basement_Merge',
	'builddir' : b64_dev_build_dir,
        'slavebuilddir':b63_dev_build_dir,
        'locks':[db_lock.access('exclusive')],
	'factory' : f64}

b65_package_tdmore_dvd_converter_for_gotd = "package_tdmore_dvd_converter_for_gotd"
b65 = {
		'name' : 'package_tdmore_dvd_converter_for_gotd',
		'slavename' : 'Package_TDMore',
		'builddir' : b65_package_tdmore_dvd_converter_for_gotd,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f65}		

b66_package_tdmore_bluray_converter_share_version = "package_tdmore_bluray_converter_share_version"
b66 = {
		'name' : 'package_tdmore_bluray_converter_share_version',
		'slavename' : 'Package_TDMore',
		'builddir' : b66_package_tdmore_bluray_converter_share_version,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f66}		

b67_package_tdmore_dvd_to_avi_converter = "package_tdmore_dvd_to_avi_converter"
b67 = {
		'name' : 'package_tdmore_dvd_to_avi_converter',
		'slavename' : 'Package_TDMore',
		'builddir' : b67_package_tdmore_dvd_to_avi_converter,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f67}		

b68_fab9ts_dir = "branch_tdmore"
b68 = {
		'name' : 'tdmore_release',
		'slavename' : 'TDMore_Build',
		'builddir' : b68_fab9ts_dir,
		'slavebuilddir' : b68_fab9ts_dir,
                'locks':[db_lock_168.access('exclusive')],
		'factory' : f68}

b69_fab9ts_dir = "branch_tdmore_no_compile_201"
b69 = {
		'name' : 'tdmore_no_compile',
		'slavename' : 'TDMore_Build',
		'builddir' : b69_fab9ts_dir,
		'slavebuilddir' : b68_fab9ts_dir,
                'locks':[db_lock_168.access('exclusive')],
		'factory' : f69}	

b70_fab9ts_dir = "branch_safedvdcopy"
b70 = {
		'name' : 'safedvdcopy_release',
		'slavename' : 'SafeDVDCopy_Build',
		'builddir' : b70_fab9ts_dir,
		'slavebuilddir' : b70_fab9ts_dir,
                'locks':[db_lock_168.access('exclusive')],
		'factory' : f70}

b71_fab9ts_dir = "branch_safedvdcopy_no_compile_201"
b71 = {
		'name' : 'safedvdcopy_no_compile',
		'slavename' : 'SafeDVDCopy_Build',
		'builddir' : b71_fab9ts_dir,
		'slavebuilddir' : b70_fab9ts_dir,
                'locks':[db_lock_168.access('exclusive')],
		'factory' : f71}	

b72_fab9ts_dir = "branch_vidonme"
b72 = {
		'name' : 'vidonme_release',
		'slavename' : 'VidOn_Video_Toolkit_Build',
		'builddir' : b72_fab9ts_dir,
		'slavebuilddir' : b72_fab9ts_dir,
                'locks':[db_lock_168.access('exclusive')],
		'factory' : f72}

b73_fab9ts_dir = "branch_vidonme_no_compile_201"
b73 = {
		'name' : 'vidonme_no_compile',
		'slavename' : 'VidOn_Video_Toolkit_Build',
		'builddir' : b73_fab9ts_dir,
		'slavebuilddir' : b72_fab9ts_dir,
                'locks':[db_lock_168.access('exclusive')],
		'factory' : f73}	

b74_package_vidonme = "package_vidonme"
b74 = {
		'name' : 'package_vidonme',
		'slavename' : 'Package_VidOnme',
		'builddir' : b74_package_vidonme,
		'slavebuilddir' : b74_package_vidonme,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f74}		

b75_vidonme_dir = "vidonme_mac_release_201"
b75 = {
		'name' : 'mac_vidonme_release',
		'slavename' : 'Mac_VidOn_Video_Toolkit_Build',
		'builddir' : b75_vidonme_dir,
                'slavebuilddir': b75_vidonme_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f75}

b76_vidonme_no_compile_dir = "vidonme_no_compile_201"
b76 = {
		'name' : 'mac_vidonme_no_compile',
		'slavename' : 'Mac_VidOn_Video_Toolkit_Build',
		'builddir' : b76_vidonme_no_compile_dir,
		'slavebuilddir' : b75_vidonme_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f76}	


b77_package_mac_vidonme = "package_mac_vidonme"
b77 = {
		'name' : 'package_mac_vidonme',
		'slavename' : 'Package_Mac_VidOnme',
		'builddir' : b77_package_mac_vidonme,
		'locks':[db_lock_93.access('exclusive')],
                'factory' : f77}

b78_Mac107_dir = "mac_safedvdcopy_release"
b78 = {
		'name' : 'mac_safedvdcopy_release',
		'slavename' : 'Mac_SafeDVDCopy_Build',
		'builddir' : b78_Mac107_dir,
                'slavebuilddir': b78_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f78}

b79_mac_safedvdcopy_backup = "mac_safedvdcopy_backup_201"
b79 = {
		'name' : 'mac_safedvdcopy_backup',
		'slavename' : 'Mac_SafeDVDCopy_Backup',
		'builddir' : b79_mac_safedvdcopy_backup,
                'slavebuilddir':b79_mac_safedvdcopy_backup,
		'locks':[db_lock_93.access('exclusive')],
		'factory' : f79}

b80_win_safedvdcopy_backup = "win_safedvdcopy_backup_201"
b80 = {
		'name' : 'safedvdcopy_backup',
		'slavename' : 'SafeDVDCopy_Backup',
		'builddir' : b80_win_safedvdcopy_backup,
                'slavebuilddir':b80_win_safedvdcopy_backup,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f80}

b81_package_tdmore_video_converter = "package_tdmore_video_converter"
b81 = {
		'name' : 'package_tdmore_video_converter',
		'slavename' : 'Package_TDMore',
		'builddir' : b81_package_tdmore_video_converter,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f81}		

b82_restore_tdmore = "restore_tdmore_build"
b82 = {
		'name' : 'restore_tdmore',
		'slavename' : 'Restore_TDMore',
		'builddir' : b82_restore_tdmore,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f82}	

b83_restore_win_vidon_video_toolkit = "restore_win_vidon_video_toolkit_build"
b83 = {
		'name' : 'restore_vidonme',
		'slavename' : 'Restore_VidOn_Video_Toolkit',
		'builddir' : b83_restore_win_vidon_video_toolkit,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f83}	

b84_restore_mac_vidon_video_toolkit = "restore_mac_vidon_video_toolkit_build"
b84 = {
		'name' : 'restore_mac_vidonme',
		'slavename' : 'Restore_Mac_VidOn_Video_Toolkit',
		'builddir' : b84_restore_mac_vidon_video_toolkit,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f84}	

b85_tdmore_backup = "tdmore_backup_201"
b85 = {
		'name' : 'tdmore_backup',
		'slavename' : 'TDMore_Backup',
		'builddir' : b85_tdmore_backup,
                'slavebuilddir':b85_tdmore_backup,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f85}

b86_win_vidonme_backup = "win_vidonme_backup_201"
b86 = {
		'name' : 'vidonme_backup',
		'slavename' : 'VidOn_Video_Toolkit_Backup',
		'builddir' : b86_win_vidonme_backup,
                'slavebuilddir':b86_win_vidonme_backup,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f86}


b87_mac_vidonme_backup = "mac_vidonme_backup_93"
b87 = {
		'name' : 'mac_vidonme_backup',
		'slavename' : 'Mac_VidOn_Video_Toolkit_Backup',
		'builddir' : b87_mac_vidonme_backup,
                'slavebuilddir':b87_mac_vidonme_backup,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f87}

b88_backup_DVDFab_stable_trunk = "backup_DVDFab_stable_trunk_201"
b88 = {
		'name' : 'backup_DVDFab_stable_trunk',
		'slavename' : 'Backup_DVDFab_stable_trunk',
		'builddir' : b88_backup_DVDFab_stable_trunk,
                'slavebuilddir':b88_backup_DVDFab_stable_trunk,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f88}


b89_tdmore_backup_no_compile = "tdmore_backup_no_compile"
b89 = {
		'name' : 'tdmore_backup_no_compile',
		'slavename' : 'TDMore_Backup',
		'builddir' : b89_tdmore_backup_no_compile,
                'slavebuilddir':b85_tdmore_backup,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f89}

b90_win_vidonme_backup_no_compile = "win_vidonme_backup_no_compile"
b90 = {
		'name' : 'vidonme_backup_no_compile',
		'slavename' : 'VidOn_Video_Toolkit_Backup',
		'builddir' : b90_win_vidonme_backup_no_compile,
                'slavebuilddir':b86_win_vidonme_backup,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f90}


b91_mac_vidonme_backup_no_compile = "mac_vidonme_backup_no_compile"
b91 = {
		'name' : 'mac_vidonme_backup_no_compile',
		'slavename' : 'Mac_VidOn_Video_Toolkit_Backup',
		'builddir' : b91_mac_vidonme_backup_no_compile,
                'slavebuilddir':b87_mac_vidonme_backup,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f91}

b92_restore_tdmore_package_folder = "restore_tdmore_package_folder_build"
b92 = {
		'name' : 'restore_tdmore_package_folder',
		'slavename' : 'copy_DVDFab9_Official_Folder',
		'builddir' : b92_restore_tdmore_package_folder,
		'slavebuilddir' : b23_copy_dvdfab9_official_folder,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f92}	

b93_restore_win_vidonme_package_folder = "restore_win_vidonme_package_folder_build"
b93 = {
		'name' : 'restore_vidonme_package_folder',
		'slavename' : 'copy_DVDFab9_Official_Folder',
		'builddir' : b93_restore_win_vidonme_package_folder,
		'slavebuilddir' : b23_copy_dvdfab9_official_folder,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f93}	

b94_package_tdmore_backup = "package_tdmore_backup"
b94 = {
		'name' : 'package_tdmore_backup',
		'slavename' : 'Package_TDMore',
		'builddir' : b94_package_tdmore_backup,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f94}		

b95_package_vidonme_backup = "package_vidonme_backup"
b95 = {
		'name' : 'package_vidonme_backup',
		'slavename' : 'Package_VidOnme',
		'builddir' : b95_package_vidonme_backup,
		'slavebuilddir' : b74_package_vidonme,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f95}		

b96_Mac107_dir = "mac_safedvdcopy_no_compile"
b96 = {
		'name' : 'mac_safedvdcopy_no_compile',
		'slavename' : 'Mac_SafeDVDCopy_Build',
		'builddir' : b96_Mac107_dir,
                'slavebuilddir': b78_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f96}

b97_restore_win_safedvdcopy = "restore_win_safedvdcopy_build"
b97 = {
		'name' : 'restore_safedvdcopy',
		'slavename' : 'Restore_SafeDVDCopy',
		'builddir' : b97_restore_win_safedvdcopy,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f97}	

b98_restore_safedvdcopy_package_folder = "restore_safedvdcopy_package_folder_build"
b98 = {
		'name' : 'restore_safedvdcopy_package_folder',
		'slavename' : 'copy_DVDFab9_Official_Folder',
		'builddir' : b98_restore_safedvdcopy_package_folder,
		'slavebuilddir' : b23_copy_dvdfab9_official_folder,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f98}	

b99_restore_mac_safedvdcopy = "restore_mac_safedvdcopy_build"
b99 = {
		'name' : 'restore_mac_safedvdcopy',
		'slavename' : 'Restore_Mac_SafeDVDCopy',
		'builddir' : b99_restore_mac_safedvdcopy,
		'locks':[db_lock_168.access('exclusive')],
		'factory' : f99}	

b100_tdmore_dir = "branch_tdmore_30"
b100 = {
		'name' : 'tdmore_release_30',
		'slavename' : 'TDMore_Build_30',
		'builddir' : b100_tdmore_dir,
		'slavebuilddir' : b100_tdmore_dir,
                'locks':[db_lock_30.access('exclusive')],
		'factory' : f100}

b101_tdmore_dir = "branch_tdmore_rebuild_30"
b101 = {
		'name' : 'tdmore_rebuild_30',
		'slavename' : 'TDMore_Build_30',
		'builddir' : b101_tdmore_dir,
		'slavebuilddir' : b100_tdmore_dir,
                'locks':[db_lock_30.access('exclusive')],
		'factory' : f101}

b102_vidonme_dir = "branch_vidonme_30"
b102 = {
		'name' : 'vidonme_release_30',
		'slavename' : 'VidOn_Video_Toolkit_Build_30',
		'builddir' : b102_vidonme_dir,
		'slavebuilddir' : b102_vidonme_dir,
                'locks':[db_lock_30.access('exclusive')],
		'factory' : f102}

b103_vidonme_dir = "branch_vidonme_rebuild_30"
b103 = {
		'name' : 'vidonme_rebuild_30',
		'slavename' : 'VidOn_Video_Toolkit_Build_30',
		'builddir' : b103_vidonme_dir,
		'slavebuilddir' : b102_vidonme_dir,
                'locks':[db_lock_30.access('exclusive')],
		'factory' : f103}

b104_safedvdcopy_dir = "branch_safedvdcopy_30"
b104 = {
		'name' : 'safedvdcopy_release_30',
		'slavename' : 'SafeDVDCopy_Build_30',
		'builddir' : b104_safedvdcopy_dir,
		'slavebuilddir' : b104_safedvdcopy_dir,
                'locks':[db_lock_30.access('exclusive')],
		'factory' : f104}

b105_safedvdcopy_dir = "branch_safedvdcopy_rebuild_30"
b105 = {
		'name' : 'safedvdcopy_rebuild_30',
		'slavename' : 'SafeDVDCopy_Build_30',
		'builddir' : b105_safedvdcopy_dir,
		'slavebuilddir' : b104_safedvdcopy_dir,
                'locks':[db_lock_30.access('exclusive')],
		'factory' : f105}

b106_sign_videodownloader_browser = "sign_videodownlaoder_browser_build"
b106 = {
		'name' : 'sign_videodownloader_browser',
		'slavename' : 'Sign_VideoDownloader_Browser',
		'builddir' : b106_sign_videodownloader_browser,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f106}	

b107_package_tdmore_bluray_copy_share_version = "package_tdmore_bluray_copy_share_version"
b107 = {
		'name' : 'package_tdmore_bluray_copy_share_version',
		'slavename' : 'Package_TDMore',
		'builddir' : b107_package_tdmore_bluray_copy_share_version,
		'slavebuilddir' : b31_package_tdmore,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f107}		

b108_package_dvdfab_retail_japan = "package_dvdfab_retail_japan"
b108 = {
		'name' : 'package_dvdfab_retail_japan',
		'slavename' : 'Package_DVDFab9_Beta',
		'builddir' : b108_package_dvdfab_retail_japan,
		'slavebuilddir' : b27_package_dvdfab9_beta,
		'locks':[db_lock_50.access('exclusive')],
		'factory' : f108}

b109_fab9ts_dir = "branch_release_retail_japan"
b109 = {
		'name' : 'dvdfab_retail_japan_release',
		'slavename' : 'DVDFab_Retail_Japan',
		'builddir' : b109_fab9ts_dir,
		'slavebuilddir' : b109_fab9ts_dir,
                'locks':[db_lock_168.access('exclusive')],
		'factory' : f109}
		
		
b110_Mac107_dir = "Fab9_mac_release_retail_japan"
b110 = {
		'name' : 'mac_dvdfab_retail_japan_release',
		'slavename' : 'Mac_DVDFab_Retail_Japan',
		'builddir' : b110_Mac107_dir,
                'slavebuilddir': b110_Mac107_dir,
                'locks':[db_lock_93.access('exclusive')],
		'factory' : f110}
	
c['builders'] = [b1,b2,b3,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25,\
                 b26,b27,b28,b29,b30,b31,b32,b33,b34,b35,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,\
                 b48,b49,b50,b51,b52,b53,b54,b55,b56,b57,b58,b59,b60,b61,b62,b63,b64,b65,b66,b67,b68,b69,\
                 b70,b71,b72,b73,b74,b75,b76,b77,b78,b79,b80,b81,b82,b83,b84,b85,b86,b87,b88,b89,b90,b91,\
                 b92,b93,b94,b95,b96,b97,b98,b99,b100,b101,b102,b103,b104,b105,b106,b107,b108,b109,b110]



################################# STATUS TARGETS  #################################
c['status'] = []

from buildbot.status import html
from buildbot.status.web import authz, auth


authz_cfg=authz.Authz(
    # change any of these to True to enable; see the manual for more
    # options
    auth=auth.BasicAuth([('DVDFab', '123456')]),
    gracefulShutdown = False,
    forceBuild = 'auth', # use this to test your slave once it is set up
    #forceBuild = True,
    forceAllBuilds = False,
    pingBuilder = False,
    stopBuild = 'auth',
    stopAllBuilds = False,
    cancelPendingBuild = 'auth',
)
c['status'].append(html.WebStatus(http_port=8010, authz=authz_cfg))

################################# PROJECT MailNotifier #################################

from buildbot.status.mail import MailNotifier

#for DVDFab9 mobile2, 168/DVDFab9_Ts
DVDFab9_mobile2_test = MailNotifier(	
					fromaddr="buildbot@goland.cn",
					sendToInterestedUsers=False,
					lookup = "goland.cn",
					mode='failing',
					relayhost = '10.10.7.151',
					smtpPort = 25,
					smtpUser = 'buildbot@goland.cn',
					smtpPassword = '123456',
					builders = ['DVDFab9_dev_builder'])
					#extraRecipients=["zhuo.jia@goland.cn", "ming.li@goland.cn", "yasong.liu@goland.cn", "ping.sheng@goland.cn", "zhang.zhang@goland.cn", "yonggang.wang@goland.cn", "xudong.ni@goland.cn", "zhonghai.hu@goland.cn", "ke.liu@goland.cn", "xiaowei.meng@goland.cn", "hongwei.shi@goland.cn", "jinglong.wang@goland.cn", "fan.yang@goland.cn", "zhuangping.xie@goland.cn",  "dedong.xu@goland.cn"])
           
	
DVDFab9_mobile2_mail = MailNotifier(
					fromaddr="buildbot@goland.cn",
					sendToInterestedUsers=False,
					lookup = "goland.cn",
					mode='failing',
					relayhost = '10.10.7.151',
					smtpPort = 25,
					smtpUser = 'buildbot@goland.cn',
					smtpPassword = '123456',
					builders = ['DVDFab9_mac_mini'])
					#extraRecipients=["zhuo.jia@goland.cn", "ming.li@goland.cn", "yasong.liu@goland.cn", "ping.sheng@goland.cn", "zhang.zhang@goland.cn", "yonggang.wang@goland.cn", "xudong.ni@goland.cn", "zhonghai.hu@goland.cn", "ke.liu@goland.cn", "xiaowei.meng@goland.cn", "hongwei.shi@goland.cn", "jinglong.wang@goland.cn", "fan.yang@goland.cn", "zhuangping.xie@goland.cn",  "dedong.xu@goland.cn"])
					

DVDFab9_mobile2_unittest = MailNotifier(
					fromaddr="buildbot@goland.cn",
					sendToInterestedUsers=False,
					lookup = "goland.cn",
					mode='failing',
					relayhost = '10.10.7.151',
					smtpPort = 25,
					smtpUser = 'buildbot@goland.cn',
					smtpPassword = '123456',
					builders = ['DVDFab9_mobile2_unittest'],
					extraRecipients=["ping.sheng@goland.cn", "xudong.ni@goland.cn", "yonggang.wang@goland.cn", "dedong.xu@goland.cn"])

					
DVDFab9_mobile2_mail = MailNotifier(
					fromaddr="buildbot@goland.cn",
					sendToInterestedUsers=True,
					lookup = "goland.cn",
					mode='failing',
					relayhost = '10.10.7.151',
					smtpPort = 25,
					smtpUser = 'buildbot@goland.cn',
					smtpPassword = '123456',
					builders = ['dvdfab9_ts','mac_107','mac_107_rebuild','mac_107_release','dvdfab9_ts_rebuild','dvdfab9_ts_release',\
                                        'tdmore_release',"safedvdcopy_release","vidonme_release","mac_vidonme_release","mac_safedvdcopy_release",\
                                        'dvdfab_retail_japan','mac_dvdfab_retail_japan'])
					#extraRecipients=["zhuo.jia@goland.cn", "yasong.liu@goland.cn", "ping.sheng@goland.cn", "zhang.zhang@goland.cn", "yonggang.wang@goland.cn"])
					
#language file slave for DVDFab9_Win_168
dvdfab9_win_language = MailNotifier(
					fromaddr="buildbot@goland.cn",
					sendToInterestedUsers=True,
					lookup = "goland.cn",
					#mode = ['change','failing','passing','problem','warnings','all'],
					mode = 'all',
					relayhost = '10.10.7.151',
					smtpPort = 25,
					smtpUser = 'buildbot@goland.cn',
					smtpPassword = '123456',
					builders = ['dvdfab9_win'],
					extraRecipients=["dedong.xu@goland.cn","zhonghai.hu@goland.cn","rui.jiang@goland.cn"])
					
					
#DVDFab package series production				
package_dvdfab_mail = MailNotifier(
					fromaddr="buildbot@goland.cn",
					sendToInterestedUsers=True,
					lookup = "goland.cn",
					mode='all',
					relayhost = '10.10.7.151',
					smtpPort = 25,
					smtpUser = 'buildbot@goland.cn',
					smtpPassword = '123456',
					builders = ["backup_dvdfab9_win","backup_dvdfab9_mac","package_dvdfab8","all_beta_package","Dev_tdmore_builder",\
                                                    "all_official_package","package_dvdfab9_retail","package_copy_dvdfab9_official_folder",\
                                                    "package_dvdfab9_addon","official_fab_daily_build","mac_official_fab_daily_build",\
                                                    "package_dvdfab9_beta", "package_dvdfab9_official", "package_blufab9_beta","package_blufab9_official",\
                                                    "package_tdmore","package_safedvdcopy","package_mac_dvdfab9_beta","package_mac_dvdfab9_official",\
                                                    "beta_fab_no_compile", "mac_beta_fab_no_compile", "package_mac_safedvdcopy","package_mac_safedvdcopy_backup",\
                                                    "package_safedvdcopy_backup","package_tdmore_dvd_copy","package_tdmore_free_dvd_copy","package_tdmore_dvd_copy_for_gotd",\
                                                    "package_tdmore_dvd_converter","package_tdmore_bluray_copy","package_tdmore_bluray_converter","package_safedvdcopy_only",\
                                                    "package_safedvdcopy_trial","package_safedvdcopy_premium","package_safedvdcopy_premium_trial","safedvdcopy_no_compile",\
                                                    "dvdfab9_official_win_new_lib","dvdfab9_official_mac_new_lib","package_mac_safedvdcopy_only","tdmore_no_compile",\
                                                    "package_mac_safedvdcopy_trial","pacakge_mac_safedvdcopy_premium","pacakge_mac_safedvdcopy_premium_trial",\
                                                    "package_tdmore_dvd_converter_for_gotd","package_tdmore_bluray_converter_share_version",\
                                                    "package_tdmore_dvd_to_avi_converter","vidonme_no_compile", "package_vidonme","mac_vidonme_no_compile",\
                                                    "package_mac_vidonme", "package_tdmore_video_converter","restore_tdmore","restore_vidonme","restore_mac_vidonme",
                                                    "tdmore_backup","vidonme_backup","mac_vidonme_backup","backup_DVDFab_stable_trunk","tdmore_backup_no_compile",\
                                                    "vidonme_backup_no_compile","mac_vidonme_backup_no_compile","restore_tdmore_package_folder",\
                                                    "restore_vidonme_package_folder","package_tdmore_backup","package_vidonme_backup","mac_safedvdcopy_no_compile",\
                                                    "restore_safedvdcopy","restore_safedvdcopy_package_folder","restore_mac_safedvdcopy","sign_videodownloader_browser"\
                                                    "package_tdmore_bluray_copy_share_version","package_dvdfab_retail_japan"],
					extraRecipients=["dedong.xu@goland.cn"])

					
c['status'].append(DVDFab9_mobile2_test)
c['status'].append(DVDFab9_mobile2_mail)
c['status'].append(DVDFab9_mobile2_unittest)
c['status'].append(DVDFab9_mobile2_mail)
c['status'].append(dvdfab9_win_language)
c['status'].append(package_dvdfab_mail)

################################# PROJECT IDENTITY #################################

# the 'title' string will appear at the top of this buildbot
# installation's html.WebStatus home page (linked to the
# 'titleURL') and is embedded in the title of the waterfall HTML page.

c['title'] = "DVDFab_developer_Build"
c['titleURL'] = "http://www.dvdfab.cn"


c['buildbotURL'] = "http://10.10.2.170:8010/"

################################# DB URL  #################################

c['db_url'] = "sqlite:///state.sqlite"


