
; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
OutputBaseFilename=DVDFab9197Beta
AppId=DVDFab 9
AppName=DVDFab 9 
AppVerName=DVDFab 9.1.9.7 (13/04/2015) Beta
AppPublisher=Fengtao Software Inc.
AppPublisherURL=http://www.dvdfab.cn/
AppSupportURL=http://www.dvdfab.cn/
AppUpdatesURL=http://www.dvdfab.cn/
DefaultDirName={pf}\DVDFab 9
DirExistsWarning=false
DefaultGroupName=DVDFab 9
DisableReadyPage=true
; DisableProgramGroupPage=true
AllowNoIcons=true
DisableStartupPrompt=true
; AlwaysRestart=true
RestartIfNeededByRun=false
PrivilegesRequired=admin
; AlwaysCreateUninstallIcon=yes
LicenseFile=V9_Qt\License.txt
InfoAfterFile=V9_Qt\Readme.txt
; uncomment the following line if you want your installation to run on NT 3.51 too.
; MinVersion=4,3.51

SetupIconFile=V9_Qt\setupIcon\DVDFabInstall.ico
WizardImageFile=V9_Qt\setupIcon\WizardImageFile.bmp
WizardSmallImageFile=V9_Qt\setupIcon\WizardSmallImageFile.bmp
WizardImageStretch=yes

Compression=lzma2/ultra64
InternalCompressLevel=ultra64
SolidCompression=true

UninstallDisplayIcon={app}\DVDFab.exe

LanguageDetectionMethod=uilanguage
;Tells the installer to only display a select language dialog if the an exact match wasn't foundShowUndisplayableLanguages=yes           


SignTool=signtoolcmd sign /v /a /n "Fengtao Software Inc." /t http://timestamp.verisign.com/scripts/timestamp.dll $f
SignedUninstaller=yes


[Languages]
;Inno Setup's Native Language
Name: English; MessagesFile: compiler:Languages\English.isl

;Localizations:
Name: Arabic; MessagesFile: compiler:Languages\Arabic.isl
Name: Bulgarian; MessagesFile: compiler:Languages\Bulgarian.isl
;delete it at 2014-03-25
;Name: Catalan; MessagesFile: compiler:Languages\Catalan.isl
Name: Chinese_Simplified; MessagesFile: compiler:Languages\Chinese_Simplified.isl
Name: Chinese_Traditional; MessagesFile: compiler:Languages\Chinese_Traditional.isl
Name: Czech; MessagesFile: compiler:Languages\Czech.isl
Name: Danish; MessagesFile: compiler:Languages\Danish.isl
Name: Dutch; MessagesFile: compiler:Languages\Dutch.isl
Name: French; MessagesFile: compiler:Languages\French.isl
Name: German; MessagesFile: compiler:Languages\German.isl
Name: Greek; MessagesFile: compiler:Languages\Greek.isl
Name: Hungarian; MessagesFile: compiler:Languages\Hungarian.isl
Name: Italian; MessagesFile: compiler:Languages\Italian.isl; LicenseFile: V9_Qt\License_Italian.txt
Name: Japanese; MessagesFile: compiler:Languages\Japanese.isl
Name: Korean; MessagesFile: compiler:Languages\Korean.isl
Name: Norwegian; MessagesFile: compiler:Languages\Norwegian.isl
Name: Polish; MessagesFile: compiler:Languages\Polish.isl
Name: Portuguese_Portugal; MessagesFile: compiler:Languages\Portuguese.isl
Name: Portuguese_Brazil; MessagesFile: compiler:Languages\Brazilian_Portuguese.isl
Name: Russian; MessagesFile: compiler:Languages\Russian.isl
Name: Slovak; MessagesFile: compiler:Languages\Slovak.isl
Name: Spanish; MessagesFile: compiler:Languages\Spanish.isl
Name: Swedish; MessagesFile: compiler:Languages\Swedish.isl

;add below codes at 2014-03-25  
Name: Finnish; MessagesFile: compiler:Languages\Finnish.isl
Name: Ukrainian; MessagesFile: compiler:Languages\Ukrainian.isl
Name: Turkish; MessagesFile: compiler:Languages\Turkish.isl
Name: Croatian; MessagesFile: compiler:Languages\Croatian.isl
Name: Romanian; MessagesFile: compiler:Languages\Romanian.isl
Name: Valencian; MessagesFile: compiler:Languages\Valencian.isl


[Tasks]
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}
Name: quicklaunchicon; Description: {cm:CreateQuickLaunchIcon}; GroupDescription: {cm:AdditionalIcons}
;Name: InstallVSO; Description: {cm:InstallVSO}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked

[Files]
Source: V9_Qt\DVDFab.exe; DestDir: {app}; Flags: ignoreversion restartreplace
Source: FabUpdate\FabUpdate_DVDFab.exe; DestDir: {app}; DestName: FabUpdate.exe; Flags: ignoreversion restartreplace
Source: FabUpdate\FabCopy_DVDFab.exe; DestDir: {app}; DestName: FabCopy.exe; Flags: ignoreversion restartreplace
Source: V9_Qt\License.txt; DestDir: {app}; Flags: ignoreversion restartreplace
Source: V9_Qt\License_Italian.txt; DestDir: {app}; Flags: ignoreversion restartreplace
Source: V9_Qt\Readme.txt; DestDir: {app}; Flags: ignoreversion restartreplace
Source: V9_Qt\Changes.txt; DestDir: {app}; Flags: ignoreversion restartreplace
Source: V9_Qt\Commandline.txt; DestDir: {app}; Flags: ignoreversion restartreplace
Source: V9_Qt\lgpl-2.1.txt; DestDir: {app}; Flags: ignoreversion restartreplace

Source: V9_Qt\update.xml; DestDir: {app}; Flags: ignoreversion restartreplace

;add from wangyonggang at 2014-05-05
Source: V9_Qt\FabProcess_DVDFab.exe; DestDir: {app}; DestName: FabProcess.exe;  Flags: ignoreversion restartreplace

Source: Qt\QLanguage\*; DestDir: {app}\QLanguage; Flags: ignoreversion restartreplace
Source: Qt\style.css; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\uiframe.rcc; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\QtGui4.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\QtCore4.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\QtOpenGL4.dll; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Qt\FileMover.exe; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Qt\FileMove_style.css; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Qt\FileMove_AnimationSetting.txt; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Qt\FileMove_DVDFab.rcc; DestDir: {app}; DestName: FileMove.rcc; Flags: ignoreversion restartreplace
Source: Qt\FabReport_DVDFab.exe; DestDir: {app}; DestName: FabReport.exe; Flags: ignoreversion restartreplace
;Source: Qt\DVDFab.rcc; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\AnimationSetting.txt; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\QtDeclarative4.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\QtNetwork4.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\QtScript4.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\QtSql4.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\QtSvg4.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\QtXml4.dll; DestDir: {app}; Flags: ignoreversion restartreplace   
;Source: Qt\QtXmlPatterns4.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Qt\QtOpenGL4.dll; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Qt\Setting.txt; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Qt\config.xml; DestDir: {app}; Flags: ignoreversion restartreplace

;Source: Qt\Qtplugin\*; DestDir: {app}\Qtplugin; Flags: ignoreversion restartreplace recursesubdirs
Source: Qt\imageformats\qgif.dll; DestDir: {app}\imageformats; Flags: ignoreversion restartreplace recursesubdirs  
Source: Qt\imageformats\qico.dll; DestDir: {app}\imageformats; Flags: ignoreversion restartreplace recursesubdirs
Source: Qt\imageformats\qjpeg.dll; DestDir: {app}\imageformats; Flags: ignoreversion restartreplace recursesubdirs
Source: Qt\imageformats\qsvg.dll; DestDir: {app}\imageformats; Flags: ignoreversion restartreplace recursesubdirs
Source: Qt\imageformats\qmng.dll; DestDir: {app}\imageformats; Flags: ignoreversion restartreplace recursesubdirs
Source: Qt\imageformats\qtga.dll; DestDir: {app}\imageformats; Flags: ignoreversion restartreplace recursesubdirs
Source: Qt\imageformats\qtiff.dll; DestDir: {app}\imageformats; Flags: ignoreversion restartreplace recursesubdirs
Source: Qt\imageformats\qwbmp.dll; DestDir: {app}\imageformats; Flags: ignoreversion restartreplace recursesubdirs


Source: Common\uictl_default.xml; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\FabCore_DVDFab.exe; DestDir: {app}; DestName:FabCore.exe; Flags: ignoreversion restartreplace
Source: Common\FabCheck_DVDFab.exe; DestDir: {app}; DestName: FabCheck.exe; Flags: ignoreversion restartreplace
;Source: Common\FileMover.exe; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\FabRegOp_DVDFab.exe; DestDir: {app}; DestName:FabRegOp.exe; Flags: ignoreversion restartreplace
;add from jiazhuo by xudedong at 2015-01-12
Source: Common\FileOp.exe; DestDir: {app}; Flags: ignoreversion restartreplace

; Only update shell extension if version changed
Source: Common\FabShellEx32.dll; DestDir: {app}\temp; DestName: FabShellEx.dll; Flags: restartreplace; Check: IsX86
Source: Common\FabShellEx32.dll; DestDir: {app}\temp; Flags: restartreplace; Check: IsX64
Source: Common\FabShellEx.dll; DestDir: {app}\temp; Flags: restartreplace; Check: IsX64

Source: Common\msvcr90.dll; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\msvcp90.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Common\mfc90.dll; DestDir: {app}; Flags: ignoreversion restartreplace

Source: Common\mgwz.dll; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\codecs.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Common\MediaInfo.dll; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\pthreadGC2.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Common\avcodec.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Common\avformat.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Common\avutil.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Common\avcore.dll; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\vso_hwe.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Common\PcSetup.exe; DestDir: {app}; Flags: ignoreversion restartreplace; Check: IsInstallVSO
Source: Common\CrashRpt.dll; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\dbghelp.dll; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\zlibwapi.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Common\swscale-2.dll; DestDir: {app}; Flags: ignoreversion restartreplace


;Source: Common\cv210.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: Common\cxcore210.dll; DestDir: {app}; Flags: ignoreversion restartreplace

Source: Common\fabcom.crt; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\succ.wav; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\error.wav; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\BDMV\*; DestDir: {app}\BDMV; Flags: ignoreversion restartreplace recursesubdirs
Source: Common\CGP\*; DestDir: {app}\CGP; Flags: ignoreversion restartreplace
Source: Common\codecs\*; DestDir: {app}\codecs; Flags: ignoreversion restartreplace
Source: Common\FileMover\*; DestDir: {app}\FileMover; Flags: ignoreversion restartreplace 
Source: Common\Options\FabAddonBluRay.exe; DestDir: {app}\Options; Flags: ignoreversion restartreplace
Source: Common\Options\FabAddonDVD.exe; DestDir: {app}\Options; Flags: ignoreversion restartreplace
;Source: Addon\FabAddonDVD.exe; DestDir: {app}\Options; Flags: ignoreversion restartreplace
;Source: Addon\FabAddonBluRay.exe; DestDir: {app}\Options; Flags: ignoreversion restartreplace
;Source: Common\Profiles\*; DestDir: {app}\Profiles; Flags: recursesubdirs ignoreversion restartreplace
;Source: Common\profiles2\*; DestDir: {app}\profiles2; Flags: recursesubdirs ignoreversion restartreplace
;Source: Common\profiles5\*; DestDir: {app}\profiles5; Flags: recursesubdirs ignoreversion restartreplace
Source: Common\profiles6\*; DestDir: {app}\profiles6; Flags: recursesubdirs ignoreversion restartreplace
Source: Common\template\*; Excludes: DataDriven_tdmore.xml,DataDriven_safedvdcopy.xml; DestDir: {app}\template; Flags: recursesubdirs ignoreversion restartreplace


;Source: Common\fonts\*; DestDir: {app}\fonts; Flags: ignoreversion restartreplace
Source: Common\icon\*; DestDir: {app}\icon; Flags: ignoreversion restartreplace
;remove images and layout and add author from xiezhuangping at 2013-04-26
;Source: Common\images\*; DestDir: {app}\images; Flags: ignoreversion restartreplace recursesubdirs
;Source: Common\layout\*; DestDir: {app}\layout; Flags: ignoreversion restartreplace recursesubdirs
Source: Common\author\*; DestDir: {app}\author; Flags: ignoreversion restartreplace recursesubdirs

Source: Common\libplayercore.dll; DestDir: {app}; Flags: ignoreversion restartreplace
Source: Common\d3dref9.dll; DestDir: {app}; Flags: ignoreversion restartreplace
;add from liming at 2014-02-15
Source: Common\D3DX9_43.dll; DestDir: {app}; Flags: ignoreversion restartreplace


;add from xiezhuangping at 2014-03-31
Source: Common\fabui_DVDFab.rcc; DestDir: {app}; DestName:fabui.rcc; Flags: ignoreversion restartreplace
Source: Common\appcfg_DVDFab.zip; DestDir: {app}; DestName:appcfg.zip; Flags: ignoreversion restartreplace

;add from xiezhuangping at 2014-02-17
Source: Common\uicfg_DVDFab.zip; DestDir: {app}; DestName: uicfg.zip; Flags: ignoreversion restartreplace

;add from xiezhuangping at 2014-06-04
Source: Common\update_dvdfab.rcc; DestDir: {app}; DestName:update.rcc; Flags: ignoreversion restartreplace

Source: libplayercore_win\*; Excludes:avcodec-54.dll,avformat-54.dll,avfilter-3.dll; DestDir: {app}; Flags: ignoreversion restartreplace


;Source: ffmpeg_temp\*; DestDir: {app}; Flags: ignoreversion restartreplace


;Source: ProfileEditor\ProfileEditor.exe; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: ProfileEditor\config.xml; DestDir: {app}; Flags: ignoreversion restartreplace
;Source: ProfileEditor\data\*; DestDir: {app}\data; Flags: ignoreversion restartreplace
;Source: ProfileEditor\icon\*; DestDir: {app}\icon; Flags: ignoreversion restartreplace

Source: Qt\platforms\*; DestDir: {app}\platforms; Flags: ignoreversion restartreplace recursesubdirs
Source: Qt\QtQuick.2\*; DestDir: {app}\QtQuick.2; Flags: ignoreversion restartreplace recursesubdirs
Source: Qt\QtQuick\*; DestDir: {app}\QtQuick; Flags: ignoreversion restartreplace recursesubdirs
Source: Qt\D3DCompiler_43.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
Source: Qt\libEGL.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
Source: Qt\libGLESv2.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
Source: Qt\Qt5Core.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
Source: Qt\Qt5Gui.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
Source: Qt\Qt5Network.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
Source: Qt\Qt5Qml.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
Source: Qt\Qt5Quick.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
;Source: Qt\Qt5V8.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
Source: Qt\Qt5Widgets.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
Source: Qt\Qt5OpenGL.dll; DestDir: {app}; Flags: ignoreversion restartreplace 

Source: Qt\Qt5QuickParticles.dll; DestDir: {app}; Flags: ignoreversion restartreplace 
Source: Qt\Qt5Sql.dll; DestDir: {app}; Flags: ignoreversion restartreplace 
Source: Qt\Qt5Svg.dll; DestDir: {app}; Flags: ignoreversion restartreplace 
Source: Qt\Qt5Xml.dll; DestDir: {app}; Flags: ignoreversion restartreplace  
Source: Qt\Qt5XmlPatterns.dll; DestDir: {app}; Flags: ignoreversion restartreplace 

[INI]
Filename: {app}\DVDFab.url; Section: InternetShortcut; Key: URL; String: http://www.dvdfab.cn/

[Icons]
Name: {group}\DVDFab 9; Filename: {app}\DVDFab.exe
;Name: {group}\DVDFab 9 Profile Editor; Filename: {app}\ProfileEditor.exe
Name: {group}\DVDFab History; Filename: {app}\Changes.txt
;Name: {group}\DVDFab Online; Filename: {app}\DVDFab.url; IconFilename: {app}\DVDFab.exe
Name: {group}\DVDFab Online; Filename: http://www.dvdfab.cn/; IconFilename: {app}\DVDFab.exe
Name: {group}\Uninstall DVDFab 9; Filename: {uninstallexe}
;Desktop Icon
Name: {commondesktop}\DVDFab 9; Filename: {app}\DVDFab.exe; MinVersion: 4,4; Tasks: desktopicon
Name: {app}\QT Log; Filename: {app}\DVDFab.exe; MinVersion: 4,4; Parameters: /qtlog


;Quick Launch Icon
Name: {userappdata}\Microsoft\Internet Explorer\Quick Launch\DVDFab 9; Filename: {app}\DVDFab.exe; MinVersion: 4,4; Tasks: quicklaunchicon
Name: {userappdata}\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar\DVDFab 9; Filename: {app}\DVDFab.exe; MinVersion: 6,6; Tasks: quicklaunchicon

[Registry]
;Root: HKCU; Subkey: Software\DVDFab\V9_Qt; Flags: uninsdeletekey
;Root: HKLM; Subkey: Software\DVDFab\V9_Qt; Flags: uninsdeletekey

[Run]
Filename: {app}\DVDFab.exe; Parameters: "/install /language ""{language}"""
Filename: {app}\DVDFab.exe; Description: {cm:LaunchProgram,DVDFab}; Flags: nowait postinstall skipifsilent
Filename: {app}\Changes.txt; Description: {cm:WhatsNew}; Flags: nowait postinstall skipifsilent shellexec unchecked




[UninstallRun];Filename: {app}\DVDFab.exe; Parameters: "/uninstall"

[UninstallDelete]
Type: files; Name: {app}\DVDFab.url
;Type: filesandordirs; Name: {userappdata}\DVDFab9


[Code]
var
  bNeedRestart: Boolean;
  IsInstalled: Boolean;
  IsFinished: Boolean;
  IsBluFabInstalled: Boolean;
  Flag : Boolean;

///////////////////////////////////////////////////////////////////////////
// helper functions
function IsX86: Boolean;
begin
  Result := not IsWin64;
end;

function IsX64: Boolean;
begin
  Result := IsWin64 and (ProcessorArchitecture = paX64);
end;

//function IsInstallVSO: Boolean;
//begin
//  Result := IsTaskSelected('InstallVSO');
//end;


function ExitApp() : Boolean;
var
  hWndApp: HWND;
  i: integer;
begin
    hWndApp := FindWindowByWindowName( 'DVDFabInvisible' );
    if hWndApp <> 0 then
    begin
      // Force DVDFab to exit
      // 273: WM_COMMAND, 57665: 0xE141
      SendMessage( hWndApp, 273, 57665, 0 );

      // sleep up to 3 seconds to wait DVDFab exiting completely
      for i := 1 to 10 do
      begin
        Sleep( 300 );
        hWndApp := FindWindowByWindowName( 'DVDFabInvisible' );
        if hWndApp = 0 then
          break;
      end;
    end;
end;

function InitializeSetup(): Boolean;
var
  filename: string;
  ErrorCode : integer;
  //sInstallPathResult, sKey, sValueName: string;
begin
	bNeedRestart := FALSE;
	Result := True;
  Flag := True;
  filename := ExpandConstant('{userdesktop}') + '\DVDFab 9.lnk';
  if FileExists(filename) then
  begin
    DeleteFile(filename);
  end;

  ShellExec('open', 'taskkill.exe', '/f /im FabUpdate.exe', '', SW_HIDE, ewNoWait, ErrorCode);
 
  //sKey := 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\BluFab 9_is1';
  //sValueName := 'InstallLocation';   
  ////check if install DVDFab by register uninstall key of DVDFabNonDecAll
  ////if RegQueryStringValue(HKEY_LOCAL_MACHINE, sKey, sValueName, sInstallPathResult) then
  //if RegQueryStringValue(HKEY_LOCAL_MACHINE, sKey, sValueName, sInstallPathResult) and DirExists(sInstallPathResult) then
  //  begin
  //    if MsgBox(ExpandConstant('{cm:IfInstallBluFab}'), mbInformation, MB_YESNO) = IDYES then
  //    begin
  //      IsBluFabInstalled := TRUE;
  //    end
  //    else
  //    begin
  //      //IsBluFabInstalled := FALSE;
  //      //ExitApp();
  //      abort;
  //    end
  //  end
end;

function IsWindows9x: Boolean;
var
  Version: TWindowsVersion;
begin
  Result := FALSE;

  GetWindowsVersionEx(Version);

  if not Version.NTPlatform then
    Result := TRUE;
end;

function IsWindowsXP: Boolean;
var
  Version: TWindowsVersion;
begin
  Result := FALSE;

  GetWindowsVersionEx(Version);

  if Version.NTPlatform and (Version.Major = 5) then
    Result := TRUE;
end;

function IsWindowsVista: Boolean;
var
  Version: TWindowsVersion;
begin
  Result := FALSE;

  GetWindowsVersionEx(Version);

  if Version.NTPlatform and (Version.Major = 6) then
    Result := TRUE;
end;

function NeedRestart(): Boolean;
begin
  Result := bNeedRestart;

  if IsWindows9x then
    Result := TRUE;
end;


procedure CurPageChanged(CurPageID: Integer);
var
  appexe: string;
  VenBegin, AffBegin: string;
  srcexe: string;
  StrPos1, StrPos2: integer;
  Vendor, AffId: string;
  sKey,
  sValueName,
  sValueData: string;
  i: integer;
  sLowercase, sUppercase, sCK, sAffId: string;
  iSubstringPos, iResString, iPosNumStr: integer;
  ResultCode: Integer;
begin  
  if CurPageID = wpInstalling then
  begin

    for i := 1 to 3 do
    begin
    
      // add app and options to DEP exception list
      if i = 1 then
      begin
        appexe := ExpandConstant('{app}') + '\DVDFab.exe';
      end
      else if i = 2 then
      begin
        appexe := ExpandConstant('{app}') + '\Options\FabAddonBluRay.exe';
      end
      else if i = 3 then
      begin
        appexe := ExpandConstant('{app}') + '\Options\FabAddonDVD.exe';
      end;
 

      if IsWindowsXP then
      begin
        if not RegValueExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers', appexe) then
        begin
          RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers', appexe, 'DisableNXShowUI');
          RegWriteDWordValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\NoExecuteState', 'LastNoExecuteRadioButtonState', 13013);
          bNeedRestart := TRUE;
        end
      end
      else if IsWindowsVista then
      begin
        if not RegValueExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers', appexe) then
        begin
          RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers', appexe, 'DisableNXShowUI');
          RegWriteDWordValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\NoExecuteState', 'LastNoExecuteRadioButtonState', 14013);
          bNeedRestart := TRUE;
        end
      end
    end;

    // check for Vendor and Affiliate ID in the file name
    // ex: blabla_avangate-12345.exe
    // ex: blabla-brs.exe
    // ex: blabla_avangate-12345yyy.exe

    VenBegin := '_';
    AffBegin := '-';      //brs
    srcexe := ExpandConstant('{srcexe}');
    srcexe := ExtractFileName(srcexe);
    srcexe := ChangeFileExt(srcexe, '');

    StrPos1 := Pos(VenBegin, srcexe);
    StrPos2 := Pos(AffBegin, srcexe);
    Vendor := '';
    AffId := '';

    sLowercase := '';
    sUppercase := '';
    sCK := '';


    if (StrPos1 > 0) and (StrPos2 > 0) then       
    begin
      StrPos1 := StrPos1 + Length(VenBegin);
      Vendor := Copy(srcexe, strPos1, StrPos2-StrPos1);
      StrPos2 := StrPos2 + Length(AffBegin);
      AffId := Copy(srcexe, StrPos2, Length(srcexe)-StrPos2+1);

      if (Vendor <> '') and (AffId <> '') then       	  
      begin
        sLowercase := Lowercase(AffId);
        sUppercase := Uppercase(AffId);

        sKey       := 'SOFTWARE\DVDFab\V9';
        sValueName := 'BuyURL';

        iSubstringPos := CompareStr(sLowercase, sUppercase);

        //blabla_avangate-12345.exe
        if iSubstringPos = 0 then 
        begin 
          sValueData := 'http://www.dvdfab.cn/order.htm?s=dvdfab&vid=' + Vendor + '&aid=' + AffId;           
        end
        else  
        begin
           //Val(AffId, iResString, iPosNumStr);
           for i:=1 to Length(AffId) do
           begin
              if Lowercase(AffId[i]) = Uppercase(AffId[i]) then
              begin
                 continue; 
              end else
              begin
                 iPosNumStr := i;
                 break;
              end;
           end;
           sAffId := Copy(AffId, 1, iPosNumStr-1);
           sCK := Copy(AffId, iPosNumStr, Length(AffId));
           sValueData := 'http://www.dvdfab.cn/order.htm?s=dvdfab&vid=' + Vendor + '&aid=' + sAffId + '&ck=' + sCK;
        end; //blabla_avangate-12345yyy.exe

        RegWriteStringValue(HKCU, sKey, sValueName, sValueData);
      end;
    end;

    //for DVDFab version from custom-made, 
    if (StrPos1 = 0) and (StrPos2 > 0) then
    begin
      StrPos2 := StrPos2 + Length(VenBegin);
      AffId := Copy(srcexe, strPos2, Length(srcexe)-StrPos2+1);

      if (AffId <> '') then
      begin
        sKey       := 'SOFTWARE\DVDFab\V9';
        sValueName := 'BuyURL';
        sValueData := 'http://www.dvdfab.cn/order.htm?src=' + AffId;
        RegWriteStringValue(HKCU, sKey, sValueName, sValueData);
      end;
    end;
    
    if (StrPos1 = 0) and (StrPos2 = 0) then
    begin
       sKey       := 'SOFTWARE\DVDFab\V9';
       sValueName := 'BuyURL';
       sValueData := 'http://www.dvdfab.cn/order.htm?s=dvdfab';
       RegWriteStringValue(HKCU, sKey, sValueName, sValueData);
    end;

    ExitApp();
  end;
  if CurPageID = wpFinished then
	begin
	 if (not IsInstalled) and IsFinished then 
      if Flag then
      begin
        ShellExec('open', 'http://www.dvdfab.cn/thankyou.htm?s=dvdfab9', '', '', SW_SHOWNORMAL, ewNoWait, ResultCode);
         Flag := False;
      end;
   end;
end;
             
procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  appstr: string;
  appexe: string;
  ql_icon_path: string;
  ErrorCode: Integer;
begin
  if CurUninstallStep = usUninstall then
  begin
    ExitApp();   
    
    //msgbox: if del user info
    //{cm:IfRemovePersonalData}: Do you want to remove your personal data and customizations?
    if MsgBox(ExpandConstant('{cm:IfRemovePersonalData}'), mbConfirmation, MB_YESNO or MB_DEFBUTTON2) = IDNO
    then begin
       ShellExec('', ExpandConstant('{app}') + '\DVDFab.exe', '/uninstall', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode);
    end else begin
       ShellExec('', ExpandConstant('{app}') + '\DVDFab.exe', '/full_uninstall', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode);
       //DelTree(ExpandConstant('{userappdata}') + '\DVDFab9', True, True, True);
    end;   

    appstr := ExpandConstant('{app}');

    ShellExec('', ExpandConstant('regsvr32.exe'), '/s /u "'+appstr+'\FabShellEx.dll"', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode);
    
    if IsX64() then
    begin
        ShellExec('', ExpandConstant('{syswow64}\regsvr32.exe'), '/s /u "'+appstr+'\FabShellEx32.dll"', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode);
    end;

    appexe := ExpandConstant('{app}') + '\PCSetup.exe';
    if FileExists(appexe) then
    begin
      ShellExec('', appexe, '/remove2', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode);
    end;
    //for quicklaunch on windows7
    ql_icon_path := ExpandConstant('{userappdata}')+'\Microsoft\Internet Explorer\Quick Launch\DVDFab 9.lnk';
    if FileExists(ql_icon_path) then
    begin
        ShellExec('taskbarunpin', ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\DVDFab 9'), '', '', SW_SHOWNORMAL, ewNoWait, ErrorCode);
    end;

  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  sFabPath: string;
  filename: string;
  ErrorCode: Integer;
  version: string;
  ini: string;
  ql_icon_path: string;
  fabPath: string;
  ResultCode: Integer;
  dirname: string;
begin
  if CurStep = ssInstall then
  begin
//    if RegQueryStringValue(HKEY_CURRENT_USER, 'Software\DVDFab', 'Path', appexe ) then
//    begin
//      if FileExists( appexe ) then
//      begin
//        GetVersionNumbersString(appexe, version);
//
//        ini := ExpandConstant('{app}') + '\upgrade.ini';
//        SetIniString('Previous', 'Version', version, ini);
//      end;
//    end;

    
      //check if install DVDFab
      fabPath := ExpandConstant('{app}')+'\DVDFab.exe';
      if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\DVDFab 9_is1\', 'InstallLocation', sFabPath ) then
      begin
          if DirExists(sFabPath) then
          begin
            IsInstalled := TRUE;
          end;
      end 
      else if FileExists(fabPath) then
      begin
         IsInstalled := TRUE;
      end;
  end
  else if CurStep = ssPostInstall then
  begin
//    if IsInstallVSO then
//    begin
//      appexe := ExpandConstant('{app}') + '\PCSetup.exe';
//
//      ShellExec('', appexe, '/install2', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode);
//    end;

    IsFinished := True;

    filename := ExpandConstant('{app}') + '\RegOperator.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\Report.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\DVDFabReport.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\zlib.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\BDMV\x264_dp_ Standalone-Blu-ray_Fast.xml';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\profiles2\ipad.mp4.hd.xml';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\avformat.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\avutil.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\avcodec.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\avcore.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    dirname := ExpandConstant('{app}') + '\images';
    if DirExists(dirname) then
    begin
      DelTree(dirname, True, True, True);
    end;

    dirname := ExpandConstant('{app}') + '\layout';
    if DirExists(dirname) then
    begin
      DelTree(dirname, True, True, True);
    end;

    dirname := ExpandConstant('{app}') + '\author\templates\birthday';
    if DirExists(dirname) then
    begin
      DelTree(dirname, True, True, True);
    end;

    dirname := ExpandConstant('{app}') + '\author\templates\movie';
    if DirExists(dirname) then
    begin
      DelTree(dirname, True, True, True);
    end;

    filename := ExpandConstant('{app}') + '\author\templates\01movie\background\bg0.bd.png';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\author\templates\02birthday\background\bg0.bd.png';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\author\templates\03wedding\background\bg0.bd.png';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    filename := ExpandConstant('{app}') + '\author\templates\04baby\background\bg0.bd.png';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    dirname := ExpandConstant('{app}') + '\Qtplugin';
    if DirExists(dirname) then
    begin
      DelTree(dirname, True, True, True);
    end;
	
	filename := ExpandConstant('{app}') + '\imageformats\qgif4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\imageformats\qico4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\imageformats\qjpeg4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\imageformats\qsvg4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\imageformats\qtga4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\imageformats\qtiff4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\QtCore4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\QtDeclarative4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\QtGui4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\QtNetwork4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\QtOpenGL4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\QtScript4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\QtSql4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\QtSvg4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	filename := ExpandConstant('{app}') + '\QtXml4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
  filename := ExpandConstant('{app}') + '\QtXmlPatterns4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
	dirname := ExpandConstant('{app}') + '\profiles5';
    if DirExists(dirname) then
    begin
      DelTree(dirname, True, True, True);
    end;

  filename := ExpandConstant('{app}') + '\avcodec-53.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\avdevice-53.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\avdevice-54.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\avfilter-2.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\avformat-53.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\avutil-51.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\AnimationSetting.txt';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Qt5V8.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
  filename := ExpandConstant('{app}') + '\DVDFab.rcc';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
  filename := ExpandConstant('{app}') + '\dvdfab.crt';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
  filename := ExpandConstant('{app}') + '\fab.rcc';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;
	
  filename := ExpandConstant('{app}') + '\dvdfabui.rcc';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\CGP\DVDFab.CGP';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFab2Dto3D.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabAddonBluRay.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabAddonDVD.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabBluRay2BluRay.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabBluRay2DVD.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabBluRay2Mobile.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabBluRay2Mobile3D.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabDVD2DVD.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabDVD2Mobile.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabFile2BluRay.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabFile2DVD.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabFile2Mobile.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\Options\DVDFabFileMover.exe';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\avcodec-55.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\avdevice-55.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\avfilter-4.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\avformat-55.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\avutil-52.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\postproc-52.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\swresample-0.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  filename := ExpandConstant('{app}') + '\swscale-2.dll';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

  
    //if not IsInstalled then 
    //begin
      //ShellExec('open', 'http://www.dvdfab.cn/thankyou.htm?s=dvdfab9', '', '', SW_SHOWNORMAL, ewNoWait, ResultCode);
    //end;

    ql_icon_path := ExpandConstant('{userappdata}')+'\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar\DVDFab 9.lnk';
    if FileExists(ql_icon_path) then
    begin
      DeleteFile(ql_icon_path);
      ShellExec('taskbarunpin', ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\DVDFab 9'), '', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ErrorCode);
      ShellExec('taskbarpin', ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\DVDFab 9'), '', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ErrorCode);
    end;   

  //for quicklaunch on windows7
  //else if CurStep=ssDone then
  //begin
  //  ql_icon_path := ExpandConstant('{userappdata}')+'\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar\DVDFab 9.lnk';
   // if FileExists(ql_icon_path) then
    //begin
   //   DeleteFile(ql_icon_path);
    //  ShellExec('taskbarunpin', ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\DVDFab 9'), '', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ErrorCode);
    //  ShellExec('taskbarpin', ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\DVDFab 9'), '', '', SW_SHOWNORMAL, ewWaitUntilTerminated, ErrorCode);
   // end;
   end;

 end;
//for quicklaunch on windows7
//procedure DeinitializeUninstall();
//var
//  ErrorCode: Integer;
//  ql_icon_path: string;
//begin
//  ql_icon_path := ExpandConstant('{userappdata}')+'\Microsoft\Internet Explorer\Quick Launch\DVDFab 9.lnk';
//  if FileExists(ql_icon_path) then
//  begin
//      ShellExec('taskbarunpin', ExpandConstant('{userappdata}\Microsoft\Internet Explorer\Quick Launch\DVDFab 9'), '', '', SW_SHOWNORMAL, ewNoWait, ErrorCode);
//  end;
//end;

//open url when install first DVDFab or after uninstall DVDFab. 


function DelteBluFabStartProgram():Boolean;
var
  filepath: String;
begin
  if IsWindowsXP then
      begin
        filepath := 'C:\ProgramData\Microsoft\Windows\Start Menu\Programs\BluFab 9';
      end
  else if IsWindowsVista then
      begin
        filepath := 'C:\Documents and Settings\All Users\Start Menu\Programs\BluFab 9'; 
      end;
  if DirExists(filepath) then
      begin
      DelTree(filepath, True, True, True);
      end;
end;


function DeleteBluFab():Boolean;
var
  filename: String;
  ql_icon_path_curuser: String;
  ql_icon_path_public: String;
  BluFabPath: String;
  ErrorCode : integer;
begin
  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\BluFab 9_is1','InstallLocation', BluFabPath) then
  begin
    //MsgBox(BluFabPath, mbInformation, MB_OK);
    filename := ExpandConstant('{commondesktop}') + '\BluFab 9.lnk';
    if FileExists(filename) then
    begin
      DeleteFile(filename);
    end;

    ql_icon_path_curuser := ExpandConstant('{userappdata}')+'\Microsoft\Internet Explorer\Quick Launch\BluFab 9.lnk';
    if FileExists(ql_icon_path_curuser) then
    begin
      DeleteFile(filename);
    end;

    ql_icon_path_public := 'C:\Users\Public\Desktop\BluFab 9.lnk';
    if FileExists(ql_icon_path_public) then
    begin
      DeleteFile(filename);
    end;
    //ShellExec('',BluFabPath,'/VERYSILENT','', SW_HIDE, ewNoWait, ErrorCode);
    
    ShellExec('',BluFabPath + '\BluFab.exe','/full_uninstall','', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
    ShellExec('open', 'taskkill.exe', '/f /im BluFab.exe', '', SW_HIDE, ewNoWait, ErrorCode);
    DelTree(BluFabPath, True, True, True);
    DelteBluFabStartProgram();
  end
end;

procedure DeinitializeSetup();
var 
  ResultCode: Integer;
begin
    //if IsBluFabInstalled then
    //  begin
    //    DeleteBluFab();
    //  end;
    //if (not IsInstalled)  and IsFinished then 
    //begin
    //  ShellExec('open', 'http://www.dvdfab.cn/thankyou.htm?s=dvdfab9', '', '', SW_SHOWNORMAL, ewNoWait, ResultCode);
    //end;  
end;
